use warehouse COMPUTE_WH;
use database MY_DATABASE;
use role sysadmin;


select * from kyc_typeform_forms limit 5 ;

-- Bolt and Competitors


-- All Industry Including Bolt

CREATE OR REPLACE VIEW MY_DATABASE.PUBLIC.Drives_ALL AS 
SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Total_Volume", COUNT(exp.AMOUNT) AS "Total_Number_of_Rides", ROUND(AVG(exp.AMOUNT/-1), 2) AS "Average_Total_Expenses"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    exp.CREATED_AT BETWEEN TO_DATE('2021-01-01') AND TO_DATE('2021-12-31') AND mcrd_mch.MERCHANT_CATEGORY_CODE IN (5944, 7372, 4121)
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC;  


// Only for Free Now / ex Kapten   

CREATE OR REPLACE VIEW MY_DATABASE.PUBLIC.Free_Now AS 
SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume_Free_Now", COUNT(exp.AMOUNT) AS "Number_of_Rides Free_Now", ROUND(AVG(exp.AMOUNT/-1), 2) AS "Free_Now average expenses"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    exp.CREATED_AT BETWEEN TO_DATE('2021-01-01') AND TO_DATE('2021-12-31') AND mcrd_mch.MERCHANT_CATEGORY_CODE IN (5944, 7372, 4121) AND (lower(mcrd_mch.NAME) LIKE '%freenow%' OR lower(mcrd_mch.NAME) LIKE '%kapten%' OR lower(mcrd_mch.NAME) LIKE '%free now%') 
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC; 

SELECT * FROM MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS WHERE LOWER(NAME) LIKE '%system u%';

SELECT * FROM MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS WHERE LOWER(NAME) LIKE 'cora' OR LOWER(NAME) LIKE 'ets horticoles%' OR LOWER(NAME) LIKE 'truffaut'; 

SELECT * FROM MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS WHERE LOWER(NAME) LIKE '%system u%' OR LOWER(NAME) LIKE '%système u%' OR LOWER(NAME) LIKE '%hyper u%' OR LOWER(NAME) LIKE 'marche u%' OR LOWER(NAME) LIKE '%super u%' OR LOWER(NAME) LIKE '%superu%' OR LOWER(NAME) LIKE 'utile%' ;

SELECT DISTINCT MERCHANT_CATEGORY_CODE FROM MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS WHERE LOWER(NAME) LIKE '%effia%';

SELECT 
    free_n.*, ROUND((free_n.Volume_Free_Now/drives_all.Total_Volume)*100, 2) AS "Part du marché", drives_all.Total_Volume, drives_all.Total_Number_of_Rides, drives_all.Average_Total_Expenses
FROM
    MY_DATABASE.PUBLIC.Free_Now free_n
LEFT JOIN
    MY_DATABASE.PUBLIC.Drives_ALL drives_all
ON
    free_n.PERIOD = drives_all.PERIOD
ORDER BY
    free_n.PERIOD ASC;
    


SELECT *  FROM MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS WHERE LOWER(NAME) LIKE '%sapn%' OR LOWER(NAME) LIKE '%sanef%'; -- (4784, 4111, 5542, 5812)


SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, COUNT(DISTINCT exp.COMPANY_ID) AS Number_Customers
FROM
        MY_DATABASE.PUBLIC.EXPENSES exp
    INNER JOIN 
        MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
    ON
          exp.SOURCE_ID = crd_exp.ID
              INNER JOIN
                  MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
              ON
                  crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    exp.CREATED_AT BETWEEN TO_DATE('2021-01-01') 
    AND TO_DATE('2021-12-31') 
    AND mcrd_mch.MERCHANT_CATEGORY_CODE IN (4784, 4111, 5542, 5812) 
    AND (lower(mcrd_mch.NAME) LIKE '%sapn%' 
    OR lower(mcrd_mch.NAME) LIKE '%sanef%') 
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC; 
    
    
-- Chiffres pour EFFIA 

SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume ", COUNT(exp.AMOUNT) AS "Number ", ROUND(AVG(exp.AMOUNT/-1), 2) AS " Average expenses"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    exp.CREATED_AT BETWEEN TO_DATE('2020-01-01') AND TO_DATE('2021-12-31') AND mcrd_mch.MERCHANT_CATEGORY_CODE IN (7523, 4784, 9405) AND LOWER(mcrd_mch.NAME) LIKE '%effia%' 
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC;     





-- Chiffres pour  FNAC-DARTY

SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume ", COUNT(exp.AMOUNT) AS "Number ", ROUND(AVG(exp.AMOUNT/-1), 2) AS " Average expenses"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    exp.CREATED_AT >= TO_DATE('2021-01-01') AND (LOWER(mcrd_mch.NAME) LIKE '%fnac%' OR LOWER(mcrd_mch.NAME) LIKE '%darty%') 
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC;   


SELECT * FROM MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS WHERE LOWER(NAME) LIKE 'cora' OR LOWER(NAME) LIKE 'ets horticoles%' OR LOWER(NAME) LIKE 'truffaut'; 

SELECT * FROM MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS WHERE LOWER(NAME) LIKE '%system u%' OR LOWER(NAME) LIKE '%système u%' OR LOWER(NAME) LIKE '%hyper u%' OR LOWER(NAME) LIKE 'marche u%' OR LOWER(NAME) LIKE '%super u%' OR LOWER(NAME) LIKE '%superu%' OR LOWER(NAME) LIKE 'utile%' ;


-- CORA

SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume ", COUNT(exp.AMOUNT) AS "Number ", ROUND(AVG(exp.AMOUNT/-1), 2) AS " Average expenses"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    exp.CREATED_AT BETWEEN TO_DATE('2021-01-01') AND TO_DATE('2021-12-31') AND (LOWER(NAME) LIKE 'cora' OR LOWER(NAME) LIKE 'ets horticoles%' OR LOWER(NAME) LIKE 'truffaut') 
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC;   



-- System U

SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume ", COUNT(exp.AMOUNT) AS "Number ", ROUND(AVG(exp.AMOUNT/-1), 2) AS " Average expenses"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    exp.CREATED_AT BETWEEN TO_DATE('2021-01-01') AND TO_DATE('2021-12-31') AND (LOWER(NAME) LIKE '%system u%' OR LOWER(NAME) LIKE '%système u%' OR LOWER(NAME) LIKE '%hyper u%' OR LOWER(NAME) LIKE 'marche u%' OR LOWER(NAME) LIKE '%super u%' OR LOWER(NAME) LIKE '%superu%' OR LOWER(NAME) LIKE 'utile%') 
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC;   
    
    
    
SELECT DISTINCT NAME FROM MY_DATABASE.PUBLIC.MERCHANT_CATEGORIES;    


SELECT * FROM MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS WHERE LOWER(NAME) LIKE '%trainline%';


-- Volumes pour Intermarché

SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume ", COUNT(exp.AMOUNT) AS "Number ", ROUND(AVG(exp.AMOUNT/-1), 2) AS " Average expenses"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    exp.CREATED_AT >= TO_DATE('2021-01-01') AND LOWER(NAME) LIKE '%intermarché%'
    --exp.CREATED_AT >= TO_DATE('2021-01-01') AND TO_DATE('2021-12-31') AND LOWER(NAME) LIKE '%intermarché%'
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC;   



CREATE TABLE IF NOT EXISTS MY_DATABASE.KPI.Monthly_Volumes_Test(
    PERIOD date,
    VOLUME float,
    NUMBER integer,
    AVERAGE_EXPENSES float
    );
    
    
INSERT INTO MY_DATABASE.KPI.Monthly_Volumes_Test (PERIOD, VOLUME, NUMBER, AVERAGE_EXPENSES) 
SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume ", COUNT(exp.AMOUNT) AS "Number ", ROUND(AVG(exp.AMOUNT/-1), 2) AS " Average_expenses"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    exp.CREATED_AT BETWEEN TO_DATE('2022-01-01') AND TO_DATE('2022-01-31') AND LOWER(NAME) LIKE '%intermarché%'
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC;



UPDATE MY_DATABASE.KPI.Monthly_Volumes_Test SET NUMBER = 101 WHERE PERIOD = TO_DATE('2021-10-01');



DELETE FROM MY_DATABASE.KPI.Monthly_Volumes_Test WHERE PERIOD = TO_DATE('2022-01-01');


SELECT COUNT(DISTINCt REFERENCE) FROM MY_DATABASE.PUBLIC.BILLING_PRODUCTS;


-- lower(mcrd_mch.NAME) LIKE '%freenow%' OR lower(mcrd_mch.NAME) LIKE '%kapten%' OR lower(mcrd_mch.NAME) LIKE '%free now%' OR LOWER(NAME) LIKE '%chauffeurprive%'  <-->  LOWER(NAME) LIKE 'uber%'

SELECT * FROM MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS WHERE LOWER(NAME) LIKE '%bolt%'; 

SELECT * FROM MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS WHERE LOWER(NAME) LIKE '%uber%'; 


-- Bolt 2022_02_16_Bolt 

SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Total_Volume", COUNT(exp.AMOUNT) AS "Total_Number_of_Rides", ROUND(AVG(exp.AMOUNT/-1), 2) AS "Average_Total_Expenses"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    exp.CREATED_AT BETWEEN TO_DATE('2021-01-01') AND TO_DATE('2022-01-31')  AND lower(mcrd_mch.NAME) LIKE '%bolt%'
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC; 




-- Free Now 2022_02_16_Free_Now 

SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume_Free_Now", COUNT(exp.AMOUNT) AS "Number_of_Rides Free_Now", ROUND(AVG(exp.AMOUNT/-1), 2) AS "Free_Now average expenses"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    exp.CREATED_AT BETWEEN TO_DATE('2021-01-01') AND TO_DATE('2022-01-31') AND  (lower(mcrd_mch.NAME) LIKE '%freenow%' OR lower(mcrd_mch.NAME) LIKE '%kapten%' OR lower(mcrd_mch.NAME) LIKE '%free now%' OR LOWER(NAME) LIKE '%chauffeurprive%') 
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC; 





-- Uber Now 2022_02_16_Uber_Uber_eats 

SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume ", COUNT(exp.AMOUNT) AS "Number of Expenses", ROUND(AVG(exp.AMOUNT/-1), 2) AS " Average expense"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    exp.CREATED_AT BETWEEN TO_DATE('2021-01-01') AND TO_DATE('2022-01-31') AND LOWER(NAME) LIKE 'uber%'
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC;


-- virtuo Now 2022_02_16_virtuo 

SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume ", COUNT(exp.AMOUNT) AS "Number of Expenses", ROUND(AVG(exp.AMOUNT/-1), 2) AS " Average expense"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    exp.CREATED_AT BETWEEN TO_DATE('2021-01-01') AND TO_DATE('2022-01-31') AND LOWER(NAME) LIKE 'virtuo%'
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC;



SELECT * FROM MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS WHERE LOWER(NAME) LIKE '%trainline%';


-- Volumes pour Trainline

SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume ", COUNT(exp.AMOUNT) AS "Number of Expenses", ROUND(AVG(exp.AMOUNT/-1), 2) AS " Average expenses"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    exp.CREATED_AT BETWEEN TO_DATE('2021-01-01') AND TO_DATE('2022-12-31') AND LOWER(NAME) LIKE '%trainline%'
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC; 



SELECT * FROM MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS WHERE LOWER(NAME) LIKE '%franprix%';


-- Volumes pour Franprix

SELECT * FROM ( 
SELECT 
        DISTINCT mcrd_mch.NAME AS Mastercard_Mcc, LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume ", COUNT(exp.AMOUNT) AS "Number of Expenses", ROUND(AVG(exp.AMOUNT/-1), 2) AS " Average expenses"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    exp.CREATED_AT BETWEEN TO_DATE('2021-01-01') AND TO_DATE('2022-12-31') --AND LOWER(mcrd_mch.NAME) LIKE mcrd_mch.NAME -- '%franprix%'
GROUP BY Mastercard_Mcc, DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY PERIOD ASC) WHERE Mastercard_Mcc = 'Bolt'; 



SELECT DISTINCT LOWER(NAME) AS NAME FROM MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS ORDER BY NAME ASC;

--  WHERE LOWER(NAME) LIKE '%franprix%'


(SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume ", COUNT(exp.AMOUNT) AS "Number of Expenses", ROUND(AVG(exp.AMOUNT/-1), 2) AS " Average expenses"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    exp.CREATED_AT BETWEEN TO_DATE('2021-01-01') AND TO_DATE('2022-12-31') AND LOWER(NAME) LIKE '%trainline%'
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC)

UNION ALL

(SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume ", COUNT(exp.AMOUNT) AS "Number of Expenses", ROUND(AVG(exp.AMOUNT/-1), 2) AS " Average expenses"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    exp.CREATED_AT BETWEEN TO_DATE('2021-01-01') AND TO_DATE('2022-12-31') AND LOWER(NAME) LIKE '%franprix%'
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC);


SELECT 
        mcrd_mch.NAME, LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume ", COUNT(exp.AMOUNT) AS "Number of Expenses", ROUND(AVG(exp.AMOUNT/-1), 2) AS " Average expenses"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    exp.CREATED_AT BETWEEN TO_DATE('2021-01-01') AND TO_DATE('2022-12-31') AND LOWER(mcrd_mch.NAME) = mcrd_mch.NAME
GROUP BY NAME, DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC;


SELECT * FROM MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS WHERE LOWER(NAME) LIKE '* google paymen%';

SELECT * FROM MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS WHERE LOWER(NAME) LIKE 'franprix%';


SELECT DISTINCT LOWER(NAME) AS NAME FROM MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS ORDER BY NAME ASC;


SELECT 
        mcrd_mch.NAME, mcrd_mch.MERCHANT_CATEGORY_CODE, LEFT(DATE_TRUNC('YEAR', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume ", COUNT(exp.AMOUNT) AS "Number of Expenses", ROUND(AVG(exp.AMOUNT/-1), 2) AS " Average expenses"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE     
    exp.CREATED_AT BETWEEN DATEADD(MONTH,-12, DATE_TRUNC('MONTH', CURRENT_DATE())) AND date_trunc('month', current_date())
GROUP BY mcrd_mch.NAME,  mcrd_mch.MERCHANT_CATEGORY_CODE, DATE_TRUNC('YEAR', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('YEAR', exp.CREATED_AT) DESC;


CREATE OR REPLACE VIEW MY_DATABASE.KPI.Partnership_View AS
SELECT 
        mcrd_mch.NAME, CONCAT(mcrd_mch.MERCHANT_CATEGORY_CODE, ' - ', mc_name.NAME) AS "MCC code and NAME", CASE WHEN mcrd_mch.POS = 1 THEN 'Internet' ELSE 'Physical' END AS POS, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume for last 6 months", COUNT(exp.AMOUNT) AS "Number of Expenses", ROUND(AVG(exp.AMOUNT/-1), 2) AS " Average expenses"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
INNER JOIN
    MY_DATABASE.PUBLIC.MERCHANT_CATEGORIES mc_name
ON
  mcrd_mch.MERCHANT_CATEGORY_CODE = mc_name.ID   
WHERE     
    exp.CREATED_AT BETWEEN DATEADD(MONTH,-12, DATE_TRUNC('MONTH', CURRENT_DATE())) AND date_trunc('month', current_date())
    AND mcrd_mch.NAME IS NOT NULL
GROUP BY mcrd_mch.NAME,  "MCC code and NAME", mcrd_mch.POS --, DATE_TRUNC('YEAR', exp.CREATED_AT)    
ORDER BY ROUND(SUM(exp.AMOUNT/-1), 2) DESC;


SELECT date_trunc('month', current_date());

SELECT DATEADD(MONTH,-12, DATE_TRUNC('MONTH', CURRENT_DATE()));


SELECT * FROM MY_DATABASE.KPI.Partnership_View ORDER BY "Volume for last 6 months" DESC;



-- Total volume on the Travel segment (where travel = Hotels, Train, Taxi/car, Air) for all years and with a specifi view for 2021

CREATE OR REPLACE VIEW MY_DATABASE.PUBLIC.Hotel_Taxi_Car_Train_Air AS 
SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Total_Volume", COUNT(exp.AMOUNT) AS "Total_Number_of_Rides", ROUND(AVG(exp.AMOUNT/-1), 2) AS "Average_Total_Expenses"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    mcrd_mch.MERCHANT_CATEGORY_CODE IN (3000, 3695, 3732, 3702, 3826, 3503, 3261, 3694, 3516, 3056, 3652, 3677, 3029, 3030, 3530, 3049, 3814, 3785, 3144, 3738, 3637, 3722, 3765, 3006, 3786, 3526, 3112, 3507, 3027, 3648, 3808, 3514, 3654, 3792, 3595, 3769, 3012, 3040, 3670, 3043, 3063, 3017, 4112, 3260, 3668, 3511, 3100, 3659, 7032, 3798, 3585, 3096, 3048, 3824, 3634, 3742, 7033, 3771, 3777, 3751, 3510, 3301, 3631, 3551, 3699, 3577, 3018, 3830, 3524, 7011, 3797, 3098, 3541, 3813, 3716, 3089, 3609, 4011, 3592, 3058, 3719, 3537, 3050, 3540, 3088, 3039, 3692, 3501, 3621, 3026, 3037, 3778, 3793, 3102, 3640, 3047, 3567, 3715, 3099, 3296, 3628, 3684, 3720, 3775, 3533, 3535, 3025, 3801, 3014, 4789, 3818, 3770, 3001, 3302, 3693, 3015, 3632, 3779, 3629, 3013, 3619, 3298, 3819, 3217, 3190, 3665, 3549, 3689, 3560, 3623, 3076, 3674, 7012, 3082, 3184, 3612, 3800, 3502, 3728, 3146, 3075, 3553, 3174, 3031, 3011, 3051, 3103, 3681, 3523, 3544, 3837, 3734, 3021, 3591, 3182, 3796, 3057, 4119, 3068, 3505, 3052, 3538, 3583, 3706, 3829, 3033, 3548, 3703, 3816, 3745, 3723, 3772, 3636, 3572, 3559, 3248, 3512, 3236, 3066, 3644, 3558, 3617, 3794, 3602, 3019, 3536, 3649, 3671, 3545, 3783, 3737, 3016, 3297, 3657, 3521, 3543, 3747, 3717, 3635, 3643, 3223, 3653, 3084, 3010, 3615, 3663, 3730, 3641, 3625, 3718, 3608, 3081, 3575, 3519, 3570, 3784, 3256, 3206, 4468, 3752, 3754, 3196, 3596, 3651, 3515, 3573, 3528, 3658, 3028, 3064, 3035, 3078, 4131, 3183, 3008, 3178, 4411, 3647, 4582, 3645, 3680, 3247, 3044, 3662, 3782, 3790, 3513, 3741, 3672, 3661, 3175, 4511, 3655, 3020, 3561, 3825, 3709, 3607, 3180, 6513, 3292, 3690, 3072, 3509, 3613, 3799, 3811, 3034, 3562, 4722, 3660, 3802, 3688, 3542, 3597, 3125, 3552, 3069, 3710, 3795, 3042, 3240, 3136, 3079, 3832, 3127, 3129, 3822, 4111, 3555, 3022, 3791, 3642, 3590, 3211, 3228, 3032, 3773, 3177, 3520, 3077, 3639, 3161, 3007, 3687, 4723, 3721, 3219, 3598, 3504, 4121, 3698, 3780, 3604, 3667, 3638, 3508, 3740, 3065, 3191, 3038, 3024, 3267, 3581, 3579, 3835, 3111, 3506, 3246, 3676, 3731, 3678, 3294, 3295, 3245, 3234, 3132, 3750, 3299, 3774, 3586, 3539, 3700, 3675, 3005, 3618, 3650, 3009, 3004, 3812)
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC;  

SELECT * FROM MY_DATABASE.PUBLIC.Hotel_Taxi_Car_Train_Air;


-- Total volume on Train only (all actors included (sncf, trainline, ouigo, etc etc) for year 2021 + forecast 2022 & 2023

CREATE OR REPLACE VIEW MY_DATABASE.PUBLIC.Only_Train AS 
SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Total_Volume", COUNT(exp.AMOUNT) AS "Total_Number_of_Rides", ROUND(AVG(exp.AMOUNT/-1), 2) AS "Average_Total_Expenses"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    exp.CREATED_AT BETWEEN TO_DATE('2021-01-01') AND TO_DATE('2022-03-31') AND mcrd_mch.MERCHANT_CATEGORY_CODE IN (4011, 4111, 4112, 4131, 4722, 4411, 4468)
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC;  

SELECT * FROM MY_DATABASE.PUBLIC.Only_Train;


SELECT POS, COUNT(POS) FROM MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mch
INNER JOIN MY_DATABASE.PUBLIC.CARD_EXPENSES  crd_exp
ON mch.ID = crd_exp.MASTERCARD_MERCHANT_ID
WHERE LOWER(NAME) LIKE '%sncf%' GROUP BY POS;

SELECT ROUND((92753/(92753 + 12364)) * 100, 2) AS "SNCF %";




SELECT * FROM MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS WHERE LOWER(NAME) LIKE '%carglass%';


-- #  All you can eat allow_mccs_food:  %w(763 5331 5411 5422 5441 5451 5462 5499 5811 5812 5813 5814 5921 8999),



SELECT 
    NAME, COUNT(NAME) AS NUM_NAME 
FROM 
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS 
WHERE MERCHANT_CATEGORY_CODE IN (5812, 5813) --(763, 5331, 5411, 5422, 5441, 5451, 5462, 5499, 5811, 5812, 5813, 5814, 5921, 8999)
GROUP BY NAME
ORDER BY NUM_NAME DESC;



-- The Top 200 merchants (by number of expenses) by category (restaurant mainly) for 2021 & 2022

SELECT Mecharnt_NAME, COUNT(Mecharnt_NAME) AS Num_Expenses, ROUND(SUM(Exp_Amount), 2) AS Total_Expense FROM (
SELECT 
    CASE WHEN mcrd_mch.NAME = 'Uber' THEN 'Uber Eats'
         WHEN mcrd_mch.NAME = 'Ubr* Pending.uber.com' THEN 'Uber Eats' 
         WHEN mcrd_mch.NAME = 'Deliveroo.fr' THEN 'Deliveroo'
         WHEN mcrd_mch.NAME = 'Deliveroo.co.uk' THEN 'Deliveroo'
         WHEN mcrd_mch.NAME = 'Deliveroo Plus - Fr' THEN 'Deliveroo'
         ELSE mcrd_mch.NAME
         END AS Mecharnt_NAME,
  exp.AMOUNT/-1 AS Exp_Amount
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    mcrd_mch.MERCHANT_CATEGORY_CODE IN (5812, 5813, 5814) -- AND exp.CREATED_AT BETWEEN TO_DATE('2021-01-01') AND TO_DATE('2022-04-30') 
  )
GROUP BY Mecharnt_NAME    
ORDER BY Num_Expenses DESC LIMIT 200;  



-- Split of Mooncard transactions per market where Mooncard is available

SELECT INVOICE_COUNTRY, ROUND(COUNT(Exp_By_Country), 2) AS Num_Exp_By_Country, ROUND(SUM(Exp_By_Country), 2) AS Exp_By_Country, ROUND(AVG(Exp_By_Country), 2) AS AVG_Exp_By_Country FROM ( 
      SELECT 
          CASE WHEN INVOICE_COUNTRY = 'FRA' THEN 'FRA'
               WHEN INVOICE_COUNTRY = 'France' THEN 'FRA'
               WHEN INVOICE_COUNTRY = 'United Kingdom of Great Britain and Northern Ireland' THEN 'GBR'
               WHEN INVOICE_COUNTRY = 'GBR' THEN 'GBR' --5646416.83
               ELSE INVOICE_COUNTRY
               END AS INVOICE_COUNTRY, 
               AMOUNT/-1 AS Exp_By_Country
               FROM MY_DATABASE.PUBLIC.EXPENSES WHERE INVOICE_COUNTRY NOT IN ('')
      )
 GROUP BY INVOICE_COUNTRY ORDER BY Exp_By_Country DESC;
 
 
 

-- Number of monthly Mooncard users who pay with sunday (number of transactions and average expense volume)

SELECT LEFT(DATE_TRUNC(MONTH, CREATED_AT), 10) AS Month, COUNT(USER_ID) AS NUM_USERS, ROUND(AVG(AMOUNT), 2) AS AVG_Expense_AMOUNT, SUM(AMOUNT) AS Total_Expense_Amount FROM (
    SELECT 
       usr_pr.USER_ID, exp.USER_PROFILE_ID, exp.CREATED_AT, ROUND(exp.AMOUNT/-1, 2) AS AMOUNT, mcrd_mch.NAME
    FROM
        MY_DATABASE.PUBLIC.EXPENSES exp
    INNER JOIN 
        MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
    ON
        exp.SOURCE_ID = crd_exp.ID
    INNER JOIN
        MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
    ON
        crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
    INNER JOIN
        MY_DATABASE.PUBLIC.USER_PROFILES usr_pr
    ON
        exp.USER_PROFILE_ID = usr_pr.ID
    WHERE 
        LOWER(mcrd_mch.NAME) LIKE 'sunday*%' AND exp.CREATED_AT BETWEEN TO_DATE('2021-01-01') AND TO_DATE('2022-04-30')
  )
GROUP BY DATE_TRUNC(MONTH, CREATED_AT)
ORDER BY DATE_TRUNC(MONTH, CREATED_AT) ASC;


SELECT 
 *
FROM 
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS 
WHERE MERCHANT_CATEGORY_CODE IN (5541, 5542) AND COUNTRY = 'MTQ';



-- Tous les paiements de carburant échoués à Martique
SELECT LOWER(CAUSE) AS CAUSE, SUM(Num_CAUSE) AS Num_CAUSE FROM(
SELECT LOWER(CAUSE) AS CAUSE, COUNT(CAUSE) AS Num_CAUSE FROM(
    SELECT 
        LOWER(py_err.CAUSE) AS CAUSE, py_err.ID, mc_mch.* 
    FROM 
        MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mc_mch
    INNER JOIN
        MY_DATABASE.PUBLIC.PAYMENT_ERRORS py_err
    ON     
       mc_mch.ID = py_err.MASTERCARD_MERCHANT_ID
    WHERE mc_mch.MERCHANT_CATEGORY_CODE IN (5541, 5542) AND COUNTRY = 'MTQ'
)
GROUP BY CAUSE 
)
GROUP BY CAUSE
ORDER BY Num_CAUSE DESC;


-- Tous les paiements de carburant échoués à Martique pour l'utilisateur donné.

SELECT LOWER(CAUSE) AS CAUSE, COUNT(CAUSE) AS Num_CAUSE FROM (
  SELECT 
      DISTINCT LOWER(py_err.CAUSE) AS CAUSE, py_err.ID, crd.COMPANY_ID, mc_mch.* 
  FROM 
      MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mc_mch
  INNER JOIN
      MY_DATABASE.PUBLIC.PAYMENT_ERRORS py_err
  ON     
     mc_mch.ID = py_err.MASTERCARD_MERCHANT_ID
  INNER JOIN
      MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
  ON     
     mc_mch.ID = crd_exp.MASTERCARD_MERCHANT_ID     
  INNER JOIN
      MY_DATABASE.PUBLIC.CARDS crd
  ON 
     crd_exp.CARD_ID = crd.ID 
  WHERE MERCHANT_CATEGORY_CODE IN (5541, 5542) AND COUNTRY = 'MTQ' AND crd.COMPANY_ID = 'df42eb4b-44b7-4cb9-8e0a-9a2b53a00dc5'
)
GROUP BY CAUSE
;



SELECT * FROM MY_DATABASE.PUBLIC.COMPANIES WHERE ID = 'df42eb4b-44b7-4cb9-8e0a-9a2b53a00dc5';


-- Tous les paiements de carburant réussis en Martinique
SELECT 
    *
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
     mcrd_mch.MERCHANT_CATEGORY_CODE IN (5541, 5542) AND mcrd_mch.COUNTRY = 'MTQ' -- AND exp.COMPANY_ID = 'df42eb4b-44b7-4cb9-8e0a-9a2b53a00dc5'
--GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) DESC; 


-- PARKING MCC Codes : 7523 & 9405

SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Total Expenses Volume", COUNT(exp.AMOUNT) AS "Number of Expenses", ROUND(AVG(exp.AMOUNT/-1), 2) AS "Monthly Average Expense"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    exp.CREATED_AT >= TO_DATE('2021-01-01')  AND mcrd_mch.MERCHANT_CATEGORY_CODE IN (7523, 9405)
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC;      
    
    
-- The Top 10 actors on this parking industry

--CREATE OR REPLACE VIEW parking_industries AS
SELECT Mecharnt_NAME, ROUND(SUM(Exp_Amount), 2) AS Total_Expense, COUNT(Mecharnt_NAME) AS Num_Expenses, ROUND(AVG(Exp_Amount), 2) AS Average_Expense FROM (
SELECT 
    mcrd_mch.NAME AS Mecharnt_NAME, exp.AMOUNT/-1 AS Exp_Amount  
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    mcrd_mch.MERCHANT_CATEGORY_CODE IN (7523, 9405) AND Mecharnt_NAME NOT IN ('G7') -- AND exp.CREATED_AT BETWEEN TO_DATE('2021-01-01') AND TO_DATE('2022-04-30') 
  )
GROUP BY Mecharnt_NAME    
ORDER BY TOTAL_EXPENSE DESC LIMIT 30;      
    
SELECT * FROM parking_industries LIMIT 30; --WHERE LOWER(MECHARNT_NAME) LIKE '%indigo%';    
    
SELECT 
    SUM(TOTAL_EXPENSE) AS sum_TOTAL_EXPENSE,
    SUM(NUM_EXPENSES) AS sum_NUM_EXPENSES
FROM 
    parking_industries;
 WHERE LOWER(MECHARNT_NAME) LIKE '%indigo%';
    
    
SELECT ROUND((219722.12/ 3738854.32) * 100, 2) AS per_indigo_total_exp;

SELECT ROUND((18553/ 198491) * 100, 2) AS per_indigo_num_exp;
    
    


-- Volumes pour Carglass

SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume ", COUNT(exp.AMOUNT) AS "Number of Expenses", ROUND(AVG(exp.AMOUNT/-1), 2) AS " Average expenses"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    LOWER(NAME) LIKE '%carglass%' -- AND exp.CREATED_AT BETWEEN TO_DATE('2021-01-01') AND TO_DATE('2022-12-31')
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC; 


-- CarGlass
SELECT MERCHANT_CATEGORY_CODE, COUNT(MERCHANT_CATEGORY_CODE) AS Num_ FROM MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS  WHERE LOWER(NAME) LIKE '%carglass%' GROUP BY MERCHANT_CATEGORY_CODE;


-- GROUPE CASINO

SELECT * FROM MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS WHERE MERCHANT_CATEGORY_CODE IN (5983 , 5542,  5172,  5541) AND LOWER(NAME) LIKE '%casino%';


-- The Top 10 actors on this Fuel industry

CREATE OR REPLACE VIEW Fuel_industries AS
SELECT Mecharnt_NAME, ROUND(SUM(Exp_Amount), 2) AS Total_Expense, COUNT(Mecharnt_NAME) AS Num_Expenses, ROUND(AVG(Exp_Amount), 2) AS Average_Expense FROM (
SELECT 
    CASE WHEN LOWER(mcrd_mch.NAME) IN ('leclerc',  'leclerc dac',  'leclerc dac vl',  'e leclerc dac', 'e leclerc') THEN 'Leclerc'
         WHEN LOWER(mcrd_mch.NAME) LIKE '%total%' THEN 'Total'
         WHEN LOWER(mcrd_mch.NAME) LIKE '%carrefour%' THEN 'Carrefour'
         WHEN LOWER(mcrd_mch.NAME) LIKE '%leclerc%' THEN 'Leclerc'
         ELSE mcrd_mch.NAME
         END AS Mecharnt_NAME, 
    exp.AMOUNT/-1 AS Exp_Amount  
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    mcrd_mch.MERCHANT_CATEGORY_CODE IN (5983 , 5542,  5172, 5541) AND exp.CREATED_AT >= TO_DATE('2021-01-01') --AND LOWER(NAME) LIKE '%casino%' -- AND Mecharnt_NAME NOT IN ('G7') AND exp.CREATED_AT BETWEEN TO_DATE('2021-01-01') AND TO_DATE('2022-04-30') 
  )
GROUP BY Mecharnt_NAME    
ORDER BY NUM_EXPENSES DESC;     
    
    

-- Volumes pour CASINO
SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume ", COUNT(exp.AMOUNT) AS "Number of Expenses", ROUND(AVG(exp.AMOUNT/-1), 2) AS " Average expenses"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    mcrd_mch.MERCHANT_CATEGORY_CODE IN (5983 , 5542,  5172, 5541) AND PERIOD >= TO_DATE('2021-01-01') AND LOWER(NAME) LIKE '%casino%'
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC;


SELECT * FROM Fuel_industries;
    
    
SELECT 
    SUM(TOTAL_EXPENSE) AS sum_TOTAL_EXPENSE,
    SUM(NUM_EXPENSES) AS sum_NUM_EXPENSES
FROM 
    Fuel_industries
 WHERE LOWER(MECHARNT_NAME) LIKE '%casino%';
    
    
SELECT ROUND((332060.71 / 59700274.85) * 100, 2) AS per_casino_total_exp; -- 0.56

SELECT ROUND((4995 / 907150) * 100, 2) AS per_casino_num_exp; -- 0.55
        
CREATE OR REPLACE VIEW MY_DATABASE.PUBLIC.top_five_casino  AS
SELECT 
    CASE WHEN LOWER(mcrd_mch.NAME) IN ('leclerc',  'leclerc dac',  'leclerc dac vl',  'e leclerc dac', 'e leclerc') THEN 'Leclerc'
         WHEN LOWER(mcrd_mch.NAME) LIKE '%total%' THEN 'Total'
         WHEN LOWER(mcrd_mch.NAME) LIKE '%carrefour%' THEN 'Carrefour'
         WHEN LOWER(mcrd_mch.NAME) LIKE '%leclerc%' THEN 'Leclerc'
         ELSE mcrd_mch.NAME
         END AS Mecharnt_NAME, 
    ROUND(exp.AMOUNT/-1, 2) AS Exp_Amount  
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    mcrd_mch.MERCHANT_CATEGORY_CODE IN (5983 , 5542,  5172, 5541) AND exp.CREATED_AT >= TO_DATE('2021-01-01') AND LOWER(NAME) LIKE '%casino%';
    
SELECT MECHARNT_NAME, SUM(EXP_AMOUNT) AS Exp_Amount FROM MY_DATABASE.PUBLIC.top_five_casino GROUP BY Mecharnt_NAME ORDER BY Exp_Amount DESC;   

SELECT MECHARNT_NAME, COUNT(MECHARNT_NAME) AS Num_MECHARNT_NAME FROM MY_DATABASE.PUBLIC.top_five_casino GROUP BY Mecharnt_NAME ORDER BY Num_MECHARNT_NAME DESC;   
    
    
SELECT MECHARNT_NAME, 
SUM (EXP_AMOUNT) 
FROM MY_DATABASE.PUBLIC.top_five_casino 
GROUP BY MECHARNT_NAME;
    
    
    
-- CarGlass

SELECT * FROM MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS  WHERE LOWER(NAME) LIKE '%carglass%';

SELECT MERCHANT_CATEGORY_CODE, COUNT(MERCHANT_CATEGORY_CODE) AS Num_ FROM MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS  WHERE LOWER(NAME) LIKE '%carglass%' GROUP BY MERCHANT_CATEGORY_CODE;


-- Volumes pour Carglass
SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume ", COUNT(exp.AMOUNT) AS "Number of Expenses", ROUND(AVG(exp.AMOUNT/-1), 2) AS " Average expenses"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
     LOWER(NAME) LIKE '%carglass%'
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC;



-- Company Size Carglass Expenses --> INNER JOIN SF_Companies to get company size
SELECT 
     CASE WHEN acc.COMPANYSIZE__C IS NULL THEN 'Uncategorized'
     ELSE acc.COMPANYSIZE__C
     END AS COMPANY_SIZE, 
     ROUND(SUM(exp.AMOUNT/-1), 2) AS Total_Expense, COUNT(*) AS Number_of_Expenses, ROUND(AVG(exp.AMOUNT/-1), 2) AS Average_Expense
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID 
INNER JOIN
    MY_DATABASE.SALESFORCE.ACCOUNT acc
ON 
    exp.COMPANY_ID = acc.MOONCARDCOMPANYID__C    
WHERE 
     LOWER(mcrd_mch.NAME) LIKE '%carglass%'
GROUP BY acc.COMPANYSIZE__C
ORDER BY Total_Expense DESC;
    
    
    
-- Activity Sector Carglass Expenses 
SELECT 
    CASE WHEN mcrd_mch.MERCHANT_CATEGORY_CODE = 5533 THEN 'Automotive Parts, Accessories Stores'
         WHEN mcrd_mch.MERCHANT_CATEGORY_CODE = 7538 THEN 'Automotive Service Shops'
         WHEN mcrd_mch.MERCHANT_CATEGORY_CODE = 7399 THEN 'Business Services, Not Elsewhere Classified'        
         END AS Activity_Sector,
    mcrd_mch.MERCHANT_CATEGORY_CODE, ROUND(SUM(exp.AMOUNT/-1), 2) AS Total_Expenses, COUNT(*) AS NUMBER_Expenses, ROUND(AVG(exp.AMOUNT/-1), 2) AS Average_Expense 
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
     LOWER(NAME) LIKE '%carglass%'
GROUP BY mcrd_mch.MERCHANT_CATEGORY_CODE
ORDER BY Total_Expenses DESC;



SELECT 
     CASE WHEN acc.INDUSTRY IS NULL THEN 'Uncategorized'
     ELSE acc.INDUSTRY
     END AS INDUSTRY, 
     ROUND(SUM(exp.AMOUNT/-1), 2) AS Total_Expense, COUNT(*) AS Number_of_Expenses, ROUND(AVG(exp.AMOUNT/-1), 2) AS Average_Expense
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID 
INNER JOIN
    SAS_APPS.SALESFORCE.ACCOUNT acc
ON 
    exp.COMPANY_ID = acc.MOONCARDCOMPANYID__C    
WHERE 
     LOWER(mcrd_mch.NAME) LIKE '%carglass%'
GROUP BY acc.INDUSTRY
ORDER BY Total_Expense DESC;
    
    
SELECT 
    crd.COMPANY_ID, COUNT(crd.ID) AS Number_of_Cards 
FROM 
    MY_DATABASE.PUBLIC.CARDS crd
INNER JOIN
    SAS_APPS.SALESFORCE.ACCOUNT acc
ON 
    crd.COMPANY_ID = acc.MOONCARDCOMPANYID__C      
WHERE 
    DELETED_AT IS NULL 
    AND DEPRECATED_AT IS NULL 
    AND DISABLE_AT IS NULL 
    AND BRANDED_AT IS NOT NULL
GROUP BY COMPANY_ID
ORDER BY NUMBER_OF_CARDS DESC;    
    
    
-- CA en € réalisé sur du Travel segment (where travel = Hotels, Train, Taxi/car, Air) for all years


--CREATE OR REPLACE VIEW MY_DATABASE.PUBLIC.CA_HotelsTravel AS 
SELECT 
        LEFT(DATE_TRUNC('YEAR', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Total_Volume", COUNT(exp.AMOUNT) AS "Total_Number_of_Rides", ROUND(AVG(exp.AMOUNT/-1), 2) AS "Average_Total_Expenses", 'Hotel' AS Segment
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    --mcrd_mch.MERCHANT_CATEGORY_CODE IN (3000, 3695, 3732, 3702, 3826, 3503, 3261, 3694, 3516, 3056, 3652, 3677, 3029, 3030, 3530, 3049, 3814, 3785, 3144, 3738, 3637, 3722, 3765, 3006, 3786, 3526, 3112, 3507, 3027, 3648, 3808, 3514, 3654, 3792, 3595, 3769, 3012, 3040, 3670, 3043, 3063, 3017, 4112, 3260, 3668, 3511, 3100, 3659, 7032, 3798, 3585, 3096, 3048, 3824, 3634, 3742, 7033, 3771, 3777, 3751, 3510, 3301, 3631, 3551, 3699, 3577, 3018, 3830, 3524, 7011, 3797, 3098, 3541, 3813, 3716, 3089, 3609, 4011, 3592, 3058, 3719, 3537, 3050, 3540, 3088, 3039, 3692, 3501, 3621, 3026, 3037, 3778, 3793, 3102, 3640, 3047, 3567, 3715, 3099, 3296, 3628, 3684, 3720, 3775, 3533, 3535, 3025, 3801, 3014, 4789, 3818, 3770, 3001, 3302, 3693, 3015, 3632, 3779, 3629, 3013, 3619, 3298, 3819, 3217, 3190, 3665, 3549, 3689, 3560, 3623, 3076, 3674, 7012, 3082, 3184, 3612, 3800, 3502, 3728, 3146, 3075, 3553, 3174, 3031, 3011, 3051, 3103, 3681, 3523, 3544, 3837, 3734, 3021, 3591, 3182, 3796, 3057, 4119, 3068, 3505, 3052, 3538, 3583, 3706, 3829, 3033, 3548, 3703, 3816, 3745, 3723, 3772, 3636, 3572, 3559, 3248, 3512, 3236, 3066, 3644, 3558, 3617, 3794, 3602, 3019, 3536, 3649, 3671, 3545, 3783, 3737, 3016, 3297, 3657, 3521, 3543, 3747, 3717, 3635, 3643, 3223, 3653, 3084, 3010, 3615, 3663, 3730, 3641, 3625, 3718, 3608, 3081, 3575, 3519, 3570, 3784, 3256, 3206, 4468, 3752, 3754, 3196, 3596, 3651, 3515, 3573, 3528, 3658, 3028, 3064, 3035, 3078, 4131, 3183, 3008, 3178, 4411, 3647, 4582, 3645, 3680, 3247, 3044, 3662, 3782, 3790, 3513, 3741, 3672, 3661, 3175, 4511, 3655, 3020, 3561, 3825, 3709, 3607, 3180, 6513, 3292, 3690, 3072, 3509, 3613, 3799, 3811, 3034, 3562, 4722, 3660, 3802, 3688, 3542, 3597, 3125, 3552, 3069, 3710, 3795, 3042, 3240, 3136, 3079, 3832, 3127, 3129, 3822, 4111, 3555, 3022, 3791, 3642, 3590, 3211, 3228, 3032, 3773, 3177, 3520, 3077, 3639, 3161, 3007, 3687, 4723, 3721, 3219, 3598, 3504, 4121, 3698, 3780, 3604, 3667, 3638, 3508, 3740, 3065, 3191, 3038, 3024, 3267, 3581, 3579, 3835, 3111, 3506, 3246, 3676, 3731, 3678, 3294, 3295, 3245, 3234, 3132, 3750, 3299, 3774, 3586, 3539, 3700, 3675, 3005, 3618, 3650, 3009, 3004, 3812)
    mcrd_mch.MERCHANT_CATEGORY_CODE IN (3811, 3835, 3583, 3639, 3530, 3551, 3721, 3693, 3651, 3783, 3719, 6513, 3509, 3514, 3812, 3543, 3710, 3562, 3794, 7011, 3592, 3747, 3694, 3537, 3790, 3567, 3619, 3671, 3798, 3799, 3718, 3765, 3780, 3539, 3754, 3504, 3598, 3662, 3621, 3528, 3663, 3791, 3832, 3579, 3637, 3613, 3650, 3690, 3741, 3617, 3541, 3692, 3552, 3825, 3779, 3674, 3521, 3533, 3801, 3618, 3822, 3544, 3716, 3512, 3597, 3641, 3535, 3698, 3731, 3536, 3830, 7032, 3773, 3638, 3501, 3732, 3635, 3515, 3542, 3636, 3770, 3775, 3837, 3728, 3581, 3740, 3672, 3667, 3738, 3752, 3665, 3800, 3503, 3508, 3524, 3709, 3813, 3647, 3678, 3540, 3717, 3625, 3526, 3623, 3793, 3631, 3703, 3629, 3829, 3695, 3720, 3745, 3615, 3648, 3513, 3654, 3814, 3561, 3661, 3802, 7033, 3680, 3824, 4722, 3818, 3538, 3596, 3797, 3642, 3730, 3572, 3700, 3643, 3649, 3688, 3774, 3722, 3659, 3751, 3676, 3549, 3644, 3715, 3675, 3591, 3548, 3560, 3658, 7012, 3586, 3734, 3657, 3510, 3507, 3553, 3575, 3545, 3640, 3795, 3737, 3785, 3706, 3520, 3607, 3555, 3778, 3742, 3608, 3784, 3772, 3786, 3782, 3628, 3677, 3684, 3585, 3819, 3771, 3502, 3660, 3558, 3595, 3723, 3655, 3668, 3796, 3652, 3523, 3653, 3516, 3816, 3702, 3511, 3577, 3687, 3612, 3808, 3632, 3750, 3769, 3645, 3559, 3777, 3602, 3609, 3505, 3699, 3826, 3590, 3506, 3689, 3634, 3604, 3681, 3792, 3570, 3519, 3573, 3670)
GROUP BY DATE_TRUNC('YEAR', exp.CREATED_AT) , mcrd_mch.MERCHANT_CATEGORY_CODE IN (3811, 3835, 3583, 3639, 3530, 3551, 3721, 3693, 3651, 3783, 3719, 6513, 3509, 3514, 3812, 3543, 3710, 3562, 3794, 7011, 3592, 3747, 3694, 3537, 3790, 3567, 3619, 3671, 3798, 3799, 3718, 3765, 3780, 3539, 3754, 3504, 3598, 3662, 3621, 3528, 3663, 3791, 3832, 3579, 3637, 3613, 3650, 3690, 3741, 3617, 3541, 3692, 3552, 3825, 3779, 3674, 3521, 3533, 3801, 3618, 3822, 3544, 3716, 3512, 3597, 3641, 3535, 3698, 3731, 3536, 3830, 7032, 3773, 3638, 3501, 3732, 3635, 3515, 3542, 3636, 3770, 3775, 3837, 3728, 3581, 3740, 3672, 3667, 3738, 3752, 3665, 3800, 3503, 3508, 3524, 3709, 3813, 3647, 3678, 3540, 3717, 3625, 3526, 3623, 3793, 3631, 3703, 3629, 3829, 3695, 3720, 3745, 3615, 3648, 3513, 3654, 3814, 3561, 3661, 3802, 7033, 3680, 3824, 4722, 3818, 3538, 3596, 3797, 3642, 3730, 3572, 3700, 3643, 3649, 3688, 3774, 3722, 3659, 3751, 3676, 3549, 3644, 3715, 3675, 3591, 3548, 3560, 3658, 7012, 3586, 3734, 3657, 3510, 3507, 3553, 3575, 3545, 3640, 3795, 3737, 3785, 3706, 3520, 3607, 3555, 3778, 3742, 3608, 3784, 3772, 3786, 3782, 3628, 3677, 3684, 3585, 3819, 3771, 3502, 3660, 3558, 3595, 3723, 3655, 3668, 3796, 3652, 3523, 3653, 3516, 3816, 3702, 3511, 3577, 3687, 3612, 3808, 3632, 3750, 3769, 3645, 3559, 3777, 3602, 3609, 3505, 3699, 3826, 3590, 3506, 3689, 3634, 3604, 3681, 3792, 3570, 3519, 3573, 3670)
ORDER BY DATE_TRUNC('YEAR', exp.CREATED_AT) ASC;      


--Combien d'entreprises achètent du Travel ? = 2834


SELECT 
    --LEFT(DATE_TRUNC('YEAR', exp.CREATED_AT), 10) AS PERIOD,
    COUNT(DISTINCT crd.COMPANY_ID) AS NUM_COMPANIES       
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
INNER JOIN
    MY_DATABASE.PUBLIC.CARDS crd
ON
    crd_exp.CARD_ID = crd.ID      
WHERE 
    mcrd_mch.MERCHANT_CATEGORY_CODE IN (3000, 3695, 3732, 3702, 3826, 3503, 3261, 3694, 3516, 3056, 3652, 3677, 3029, 3030, 3530, 3049, 3814, 3785, 3144, 3738, 3637, 3722, 3765, 3006, 3786, 3526, 3112, 3507, 3027, 3648, 3808, 3514, 3654, 3792, 3595, 3769, 3012, 3040, 3670, 3043, 3063, 3017, 4112, 3260, 3668, 3511, 3100, 3659, 7032, 3798, 3585, 3096, 3048, 3824, 3634, 3742, 7033, 3771, 3777, 3751, 3510, 3301, 3631, 3551, 3699, 3577, 3018, 3830, 3524, 7011, 3797, 3098, 3541, 3813, 3716, 3089, 3609, 4011, 3592, 3058, 3719, 3537, 3050, 3540, 3088, 3039, 3692, 3501, 3621, 3026, 3037, 3778, 3793, 3102, 3640, 3047, 3567, 3715, 3099, 3296, 3628, 3684, 3720, 3775, 3533, 3535, 3025, 3801, 3014, 4789, 3818, 3770, 3001, 3302, 3693, 3015, 3632, 3779, 3629, 3013, 3619, 3298, 3819, 3217, 3190, 3665, 3549, 3689, 3560, 3623, 3076, 3674, 7012, 3082, 3184, 3612, 3800, 3502, 3728, 3146, 3075, 3553, 3174, 3031, 3011, 3051, 3103, 3681, 3523, 3544, 3837, 3734, 3021, 3591, 3182, 3796, 3057, 4119, 3068, 3505, 3052, 3538, 3583, 3706, 3829, 3033, 3548, 3703, 3816, 3745, 3723, 3772, 3636, 3572, 3559, 3248, 3512, 3236, 3066, 3644, 3558, 3617, 3794, 3602, 3019, 3536, 3649, 3671, 3545, 3783, 3737, 3016, 3297, 3657, 3521, 3543, 3747, 3717, 3635, 3643, 3223, 3653, 3084, 3010, 3615, 3663, 3730, 3641, 3625, 3718, 3608, 3081, 3575, 3519, 3570, 3784, 3256, 3206, 4468, 3752, 3754, 3196, 3596, 3651, 3515, 3573, 3528, 3658, 3028, 3064, 3035, 3078, 4131, 3183, 3008, 3178, 4411, 3647, 4582, 3645, 3680, 3247, 3044, 3662, 3782, 3790, 3513, 3741, 3672, 3661, 3175, 4511, 3655, 3020, 3561, 3825, 3709, 3607, 3180, 6513, 3292, 3690, 3072, 3509, 3613, 3799, 3811, 3034, 3562, 4722, 3660, 3802, 3688, 3542, 3597, 3125, 3552, 3069, 3710, 3795, 3042, 3240, 3136, 3079, 3832, 3127, 3129, 3822, 4111, 3555, 3022, 3791, 3642, 3590, 3211, 3228, 3032, 3773, 3177, 3520, 3077, 3639, 3161, 3007, 3687, 4723, 3721, 3219, 3598, 3504, 4121, 3698, 3780, 3604, 3667, 3638, 3508, 3740, 3065, 3191, 3038, 3024, 3267, 3581, 3579, 3835, 3111, 3506, 3246, 3676, 3731, 3678, 3294, 3295, 3245, 3234, 3132, 3750, 3299, 3774, 3586, 3539, 3700, 3675, 3005, 3618, 3650, 3009, 3004, 3812)
--GROUP BY DATE_TRUNC('YEAR', exp.CREATED_AT)
ORDER BY DATE_TRUNC('YEAR', exp.CREATED_AT) DESC;    
    
    

--Volume + Number of cardholders who travel (total “Travel” expenses)
SELECT 
        -- LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Total_Volume", COUNT(exp.AMOUNT) AS "Total_Number_of_Rides", ROUND(AVG(exp.AMOUNT/-1), 2) AS "Average_Total_Expenses", COUNT(DISTINCT crd.USER_PROFILE_ID) AS Num_CardHolders
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Total_Volume", COUNT(DISTINCT crd.USER_PROFILE_ID) AS Num_CardHolders
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
INNER JOIN
    MY_DATABASE.PUBLIC.CARDS crd
ON
    crd_exp.CARD_ID = crd.ID      
WHERE 
    exp.CREATED_AT >= TO_DATE('2021-01-01')
    AND mcrd_mch.MERCHANT_CATEGORY_CODE IN (3000, 3695, 3732, 3702, 3826, 3503, 3261, 3694, 3516, 3056, 3652, 3677, 3029, 3030, 3530, 3049, 3814, 3785, 3144, 3738, 3637, 3722, 3765, 3006, 3786, 3526, 3112, 3507, 3027, 3648, 3808, 3514, 3654, 3792, 3595, 3769, 3012, 3040, 3670, 3043, 3063, 3017, 4112, 3260, 3668, 3511, 3100, 3659, 7032, 3798, 3585, 3096, 3048, 3824, 3634, 3742, 7033, 3771, 3777, 3751, 3510, 3301, 3631, 3551, 3699, 3577, 3018, 3830, 3524, 7011, 3797, 3098, 3541, 3813, 3716, 3089, 3609, 4011, 3592, 3058, 3719, 3537, 3050, 3540, 3088, 3039, 3692, 3501, 3621, 3026, 3037, 3778, 3793, 3102, 3640, 3047, 3567, 3715, 3099, 3296, 3628, 3684, 3720, 3775, 3533, 3535, 3025, 3801, 3014, 4789, 3818, 3770, 3001, 3302, 3693, 3015, 3632, 3779, 3629, 3013, 3619, 3298, 3819, 3217, 3190, 3665, 3549, 3689, 3560, 3623, 3076, 3674, 7012, 3082, 3184, 3612, 3800, 3502, 3728, 3146, 3075, 3553, 3174, 3031, 3011, 3051, 3103, 3681, 3523, 3544, 3837, 3734, 3021, 3591, 3182, 3796, 3057, 4119, 3068, 3505, 3052, 3538, 3583, 3706, 3829, 3033, 3548, 3703, 3816, 3745, 3723, 3772, 3636, 3572, 3559, 3248, 3512, 3236, 3066, 3644, 3558, 3617, 3794, 3602, 3019, 3536, 3649, 3671, 3545, 3783, 3737, 3016, 3297, 3657, 3521, 3543, 3747, 3717, 3635, 3643, 3223, 3653, 3084, 3010, 3615, 3663, 3730, 3641, 3625, 3718, 3608, 3081, 3575, 3519, 3570, 3784, 3256, 3206, 4468, 3752, 3754, 3196, 3596, 3651, 3515, 3573, 3528, 3658, 3028, 3064, 3035, 3078, 4131, 3183, 3008, 3178, 4411, 3647, 4582, 3645, 3680, 3247, 3044, 3662, 3782, 3790, 3513, 3741, 3672, 3661, 3175, 4511, 3655, 3020, 3561, 3825, 3709, 3607, 3180, 6513, 3292, 3690, 3072, 3509, 3613, 3799, 3811, 3034, 3562, 4722, 3660, 3802, 3688, 3542, 3597, 3125, 3552, 3069, 3710, 3795, 3042, 3240, 3136, 3079, 3832, 3127, 3129, 3822, 4111, 3555, 3022, 3791, 3642, 3590, 3211, 3228, 3032, 3773, 3177, 3520, 3077, 3639, 3161, 3007, 3687, 4723, 3721, 3219, 3598, 3504, 4121, 3698, 3780, 3604, 3667, 3638, 3508, 3740, 3065, 3191, 3038, 3024, 3267, 3581, 3579, 3835, 3111, 3506, 3246, 3676, 3731, 3678, 3294, 3295, 3245, 3234, 3132, 3750, 3299, 3774, 3586, 3539, 3700, 3675, 3005, 3618, 3650, 3009, 3004, 3812)
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC;  
        

-- Among this volume, how much represents services (mcc: 4121 + other if any) like Uber and others
SELECT 
        -- LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Total_Volume", COUNT(exp.AMOUNT) AS "Total_Number_of_Rides", ROUND(AVG(exp.AMOUNT/-1), 2) AS "Average_Total_Expenses", COUNT(DISTINCT crd.USER_PROFILE_ID) AS Num_CardHolders
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Total_Volume", COUNT(DISTINCT crd.USER_PROFILE_ID) AS Num_CardHolders
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
INNER JOIN
    MY_DATABASE.PUBLIC.CARDS crd
ON
    crd_exp.CARD_ID = crd.ID      
WHERE 
    exp.CREATED_AT >= TO_DATE('2021-01-01')
    AND mcrd_mch.MERCHANT_CATEGORY_CODE IN (4121, 4119, 4789)
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC;

-- Uber : Volume 2021 + 2022; nbr expenses; avr expense + % of market


-- ONLY_UBER Eats Rides

SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume_Eats", COUNT(exp.AMOUNT) AS "Number_of_Rides Uber Eats", ROUND(AVG(exp.AMOUNT/-1), 2) AS "Uber Eats average expenses"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    exp.CREATED_AT BETWEEN TO_DATE('2021-01-01') AND TO_DATE('2022-12-31') AND mcrd_mch.MERCHANT_CATEGORY_CODE IN (4121, 4119, 4789) AND (( LOWER(mcrd_mch.NAME) NOT LIKE 'uber%' )OR ( LOWER(mcrd_mch.NAME) NOT LIKE 'ubr%' ) )  --AND lower(mcrd_mch.NAME) NOT IN ('uber* eats', 'ubersuggest', 'uberconference', 'uberpayment', 'uber*eats', 'uber eats','uberconference san francisco ca', 'uberuae_eats', 'ubersuggest -neilpatel')
    -- ( LOWER(mcrd_mch.NAME) LIKE 'uber%' AND lower(mcrd_mch.NAME) NOT IN ('ubersuggest', 'uberconference', 'uberpayment', 'uber*eats', 'uber eats','uberconference san francisco ca', 'uberuae_eats', 'ubersuggest -neilpatel')) 
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC; 



-- ONLY_UBER Rides
CREATE OR REPLACE VIEW MY_DATABASE.PUBLIC.Uber_Rides AS 
SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume_Uber", COUNT(exp.AMOUNT) AS "Number_of_Rides Uber", ROUND(AVG(exp.AMOUNT/-1), 2) AS "Uber average expenses"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    exp.CREATED_AT BETWEEN TO_DATE('2021-01-01') AND TO_DATE('2022-12-31') AND mcrd_mch.MERCHANT_CATEGORY_CODE IN (4121, 4119, 4789) AND (( LOWER(mcrd_mch.NAME) LIKE 'uber%' )OR ( LOWER(mcrd_mch.NAME) LIKE 'ubr%' ) )  AND lower(mcrd_mch.NAME) NOT IN ('uber* eats', 'ubersuggest', 'uberconference', 'uberpayment', 'uber*eats', 'uber eats','uberconference san francisco ca', 'uberuae_eats', 'ubersuggest -neilpatel')
    -- ( LOWER(mcrd_mch.NAME) LIKE 'uber%' AND lower(mcrd_mch.NAME) NOT IN ('ubersuggest', 'uberconference', 'uberpayment', 'uber*eats', 'uber eats','uberconference san francisco ca', 'uberuae_eats', 'ubersuggest -neilpatel')) 
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC; 

SELECT * 
    FROM MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS  mcrd_mch
        WHERE  (( LOWER(mcrd_mch.NAME) LIKE 'uber%' )OR ( LOWER(mcrd_mch.NAME) LIKE 'ubr%' ) )  AND lower(NAME) NOT IN ('uber* eats', 'ubersuggest', 'uberconference', 'uberpayment', 'uber*eats', 'uber eats','uberconference san francisco ca', 'uberuae_eats', 'ubersuggest -neilpatel');    
-- ALL RIDES
--CREATE OR REPLACE VIEW MY_DATABASE.PUBLIC.All_TAXIs AS 
SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Total_Volume", COUNT(exp.AMOUNT) AS "Total_Number_of_Rides", ROUND(AVG(exp.AMOUNT/-1), 2) AS "Average_Total_Expenses"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    exp.CREATED_AT BETWEEN TO_DATE('2021-01-01') AND TO_DATE('2022-12-31') AND mcrd_mch.MERCHANT_CATEGORY_CODE IN (4121, 4119, 4789) --AND (lower(mcrd_mch.NAME) NOT IN ('uberpayment', 'uber*eats', 'uber eats','uberconference san francisco ca', 'uberuae_eats'  )) 
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC; 

-- FINAL RESULT
SELECT 
    ubr_rdes.*, ROUND((ubr_rdes.Volume_Uber/drives_all.Total_Volume)*100, 2) AS "Part du marché", drives_all.Total_Volume, drives_all.Total_Number_of_Rides, drives_all.Average_Total_Expenses
FROM
    MY_DATABASE.PUBLIC.Uber_Rides ubr_rdes
LEFT JOIN
    MY_DATABASE.PUBLIC.All_TAXIs drives_all
ON
    ubr_rdes.PERIOD = drives_all.PERIOD
ORDER BY
    ubr_rdes.PERIOD ASC;



-- On this total volume, i need : Amount done/size of companies

SELECT 
     CASE WHEN acc.COMPANYSIZE__C IS NULL THEN 'Uncategorized'
     ELSE acc.COMPANYSIZE__C
     END AS COMPANY_SIZE, 
     ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume_Uber"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID 
INNER JOIN
    SAS_APPS.SALESFORCE.ACCOUNT acc
ON 
    exp.COMPANY_ID = acc.MOONCARDCOMPANYID__C    
WHERE 
    exp.CREATED_AT BETWEEN TO_DATE('2021-01-01') AND TO_DATE('2022-12-31') AND mcrd_mch.MERCHANT_CATEGORY_CODE IN (4121, 4119, 4789) AND (( LOWER(mcrd_mch.NAME) LIKE 'uber%' )OR ( LOWER(mcrd_mch.NAME) LIKE 'ubr%' ) )  AND lower(mcrd_mch.NAME) NOT IN ('uber* eats', 'ubersuggest', 'uberconference', 'uberpayment', 'uber*eats', 'uber eats','uberconference san francisco ca', 'uberuae_eats', 'ubersuggest -neilpatel')
    --( LOWER(mcrd_mch.NAME) LIKE 'uber%' AND lower(mcrd_mch.NAME) NOT IN ('ubersuggest', 'uberconference', 'uberpayment', 'uber*eats', 'uber eats','uberconference san francisco ca', 'uberuae_eats', 'ubersuggest -neilpatel')) 
GROUP BY COMPANY_SIZE    
ORDER BY COMPANY_SIZE ASC;     
    

-- To what/which sector belongs the companies that make expenses on Uber ?

SELECT 
     CASE WHEN acc.INDUSTRY IS NULL THEN 'Uncategorized'
     ELSE acc.INDUSTRY
     END AS Company_Sector, 
     ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume_Uber"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID 
INNER JOIN
    SAS_APPS.SALESFORCE.ACCOUNT acc
ON 
    exp.COMPANY_ID = acc.MOONCARDCOMPANYID__C    
WHERE 
    exp.CREATED_AT BETWEEN TO_DATE('2021-01-01') AND TO_DATE('2022-12-31') AND mcrd_mch.MERCHANT_CATEGORY_CODE IN (4121, 4119, 4789) AND (( LOWER(mcrd_mch.NAME) LIKE 'uber%' )OR ( LOWER(mcrd_mch.NAME) LIKE 'ubr%' ) )  AND lower(mcrd_mch.NAME) NOT IN ('uber* eats', 'ubersuggest', 'uberconference', 'uberpayment', 'uber*eats', 'uber eats','uberconference san francisco ca', 'uberuae_eats', 'ubersuggest -neilpatel')
    --exp.CREATED_AT BETWEEN TO_DATE('2021-01-01') AND TO_DATE('2022-12-31') AND mcrd_mch.MERCHANT_CATEGORY_CODE IN (4121, 4119, 4789) AND ( LOWER(mcrd_mch.NAME) LIKE 'uber%' AND lower(mcrd_mch.NAME) NOT IN ('ubersuggest', 'uberconference', 'uberpayment', 'uber*eats', 'uber eats','uberconference san francisco ca', 'uberuae_eats', 'ubersuggest -neilpatel')) 
GROUP BY Company_Sector    
ORDER BY VOLUME_UBER DESC;     
    

-- Performance of the market : Comparison with direct competitors (Bolt - Free Now - G7, etc )

CREATE OR REPLACE VIEW MY_DATABASE.PUBLIC.Other_Actors_Rides AS 
SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume_Other_Actors", COUNT(exp.AMOUNT) AS "Number_of_Rides Other_Actors", ROUND(AVG(exp.AMOUNT/-1), 2) AS "Other_Actors_average expenses"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    exp.CREATED_AT BETWEEN TO_DATE('2021-01-01') AND TO_DATE('2022-12-31') AND mcrd_mch.MERCHANT_CATEGORY_CODE IN (4121, 4119, 4789) AND (( LOWER(mcrd_mch.NAME) NOT LIKE 'uber%' )OR ( LOWER(mcrd_mch.NAME) NOT LIKE 'ubr%' ) )  AND lower(mcrd_mch.NAME) NOT IN ('uber* eats', 'ubersuggest', 'uberconference', 'uberpayment', 'uber*eats', 'uber eats','uberconference san francisco ca', 'uberuae_eats', 'ubersuggest -neilpatel')
    -- exp.CREATED_AT BETWEEN TO_DATE('2021-01-01') AND TO_DATE('2022-12-31') AND mcrd_mch.MERCHANT_CATEGORY_CODE IN (4121, 4119, 4789) AND ( LOWER(mcrd_mch.NAME) NOT LIKE 'uber%' AND lower(mcrd_mch.NAME) NOT IN ('ubersuggest', 'uberconference', 'uberpayment', 'uber*eats', 'uber eats','uberconference san francisco ca', 'uberuae_eats', 'ubersuggest -neilpatel')) 
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC; 



-- FINAL RESULT
SELECT 
    ubr_rdes.*, oth_act.VOLUME_OTHER_ACTORS, oth_act."NUMBER_OF_RIDES OTHER_ACTORS", oth_act."OTHER_ACTORS_AVERAGE EXPENSES"
FROM
    MY_DATABASE.PUBLIC.Uber_Rides ubr_rdes
LEFT JOIN
    MY_DATABASE.PUBLIC.Other_Actors_Rides oth_act
ON
    ubr_rdes.PERIOD = oth_act.PERIOD
ORDER BY
    ubr_rdes.PERIOD ASC;

SELECT * FROM MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS  WHERE LOWER(NAME) LIKE 'uber%' AND lower(NAME) NOT IN ('ubersuggest', 'uberconference', 'uberpayment', 'uber*eats', 'uber eats','uberconference san francisco ca', 'uberuae_eats', 'ubersuggest -neilpatel');    


-- Number of cardholders using travel services other than UBER -> Very important
SELECT 
        -- LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Total_Volume", COUNT(exp.AMOUNT) AS "Total_Number_of_Rides", ROUND(AVG(exp.AMOUNT/-1), 2) AS "Average_Total_Expenses", COUNT(DISTINCT crd.USER_PROFILE_ID) AS Num_CardHolders
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Total_Volume", COUNT(DISTINCT crd.USER_PROFILE_ID) AS Num_CardHolders
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
INNER JOIN
    MY_DATABASE.PUBLIC.CARDS crd
ON
    crd_exp.CARD_ID = crd.ID      
WHERE 
    exp.CREATED_AT >= TO_DATE('2021-01-01')
    AND mcrd_mch.MERCHANT_CATEGORY_CODE IN (3000, 3695, 3732, 3702, 3826, 3503, 3261, 3694, 3516, 3056, 3652, 3677, 3029, 3030, 3530, 3049, 3814, 3785, 3144, 3738, 3637, 3722, 3765, 3006, 3786, 3526, 3112, 3507, 3027, 3648, 3808, 3514, 3654, 3792, 3595, 3769, 3012, 3040, 3670, 3043, 3063, 3017, 4112, 3260, 3668, 3511, 3100, 3659, 7032, 3798, 3585, 3096, 3048, 3824, 3634, 3742, 7033, 3771, 3777, 3751, 3510, 3301, 3631, 3551, 3699, 3577, 3018, 3830, 3524, 7011, 3797, 3098, 3541, 3813, 3716, 3089, 3609, 4011, 3592, 3058, 3719, 3537, 3050, 3540, 3088, 3039, 3692, 3501, 3621, 3026, 3037, 3778, 3793, 3102, 3640, 3047, 3567, 3715, 3099, 3296, 3628, 3684, 3720, 3775, 3533, 3535, 3025, 3801, 3014, 4789, 3818, 3770, 3001, 3302, 3693, 3015, 3632, 3779, 3629, 3013, 3619, 3298, 3819, 3217, 3190, 3665, 3549, 3689, 3560, 3623, 3076, 3674, 7012, 3082, 3184, 3612, 3800, 3502, 3728, 3146, 3075, 3553, 3174, 3031, 3011, 3051, 3103, 3681, 3523, 3544, 3837, 3734, 3021, 3591, 3182, 3796, 3057, 4119, 3068, 3505, 3052, 3538, 3583, 3706, 3829, 3033, 3548, 3703, 3816, 3745, 3723, 3772, 3636, 3572, 3559, 3248, 3512, 3236, 3066, 3644, 3558, 3617, 3794, 3602, 3019, 3536, 3649, 3671, 3545, 3783, 3737, 3016, 3297, 3657, 3521, 3543, 3747, 3717, 3635, 3643, 3223, 3653, 3084, 3010, 3615, 3663, 3730, 3641, 3625, 3718, 3608, 3081, 3575, 3519, 3570, 3784, 3256, 3206, 4468, 3752, 3754, 3196, 3596, 3651, 3515, 3573, 3528, 3658, 3028, 3064, 3035, 3078, 4131, 3183, 3008, 3178, 4411, 3647, 4582, 3645, 3680, 3247, 3044, 3662, 3782, 3790, 3513, 3741, 3672, 3661, 3175, 4511, 3655, 3020, 3561, 3825, 3709, 3607, 3180, 6513, 3292, 3690, 3072, 3509, 3613, 3799, 3811, 3034, 3562, 4722, 3660, 3802, 3688, 3542, 3597, 3125, 3552, 3069, 3710, 3795, 3042, 3240, 3136, 3079, 3832, 3127, 3129, 3822, 4111, 3555, 3022, 3791, 3642, 3590, 3211, 3228, 3032, 3773, 3177, 3520, 3077, 3639, 3161, 3007, 3687, 4723, 3721, 3219, 3598, 3504, 4121, 3698, 3780, 3604, 3667, 3638, 3508, 3740, 3065, 3191, 3038, 3024, 3267, 3581, 3579, 3835, 3111, 3506, 3246, 3676, 3731, 3678, 3294, 3295, 3245, 3234, 3132, 3750, 3299, 3774, 3586, 3539, 3700, 3675, 3005, 3618, 3650, 3009, 3004, 3812)
    AND LOWER(mcrd_mch.NAME) NOT LIKE 'uber%' AND lower(mcrd_mch.NAME) NOT IN ('ubersuggest', 'uberconference', 'uberpayment', 'uber*eats', 'uber eats','uberconference san francisco ca', 'uberuae_eats', 'ubersuggest -neilpatel')
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC;     
    
    
-- Forecast total volume on Travel
SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Total_Volume", COUNT(exp.AMOUNT) AS "Total_Number_of_Rides", ROUND(AVG(exp.AMOUNT/-1), 2) AS "Average_Total_Expenses", COUNT(DISTINCT crd.USER_PROFILE_ID) AS Num_CardHolders
        --LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Total_Volume", COUNT(DISTINCT crd.USER_PROFILE_ID) AS Num_CardHolders
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
INNER JOIN
    MY_DATABASE.PUBLIC.CARDS crd
ON
    crd_exp.CARD_ID = crd.ID      
WHERE 
    exp.CREATED_AT >= TO_DATE('2021-01-01')
    AND mcrd_mch.MERCHANT_CATEGORY_CODE IN (3000, 3695, 3732, 3702, 3826, 3503, 3261, 3694, 3516, 3056, 3652, 3677, 3029, 3030, 3530, 3049, 3814, 3785, 3144, 3738, 3637, 3722, 3765, 3006, 3786, 3526, 3112, 3507, 3027, 3648, 3808, 3514, 3654, 3792, 3595, 3769, 3012, 3040, 3670, 3043, 3063, 3017, 4112, 3260, 3668, 3511, 3100, 3659, 7032, 3798, 3585, 3096, 3048, 3824, 3634, 3742, 7033, 3771, 3777, 3751, 3510, 3301, 3631, 3551, 3699, 3577, 3018, 3830, 3524, 7011, 3797, 3098, 3541, 3813, 3716, 3089, 3609, 4011, 3592, 3058, 3719, 3537, 3050, 3540, 3088, 3039, 3692, 3501, 3621, 3026, 3037, 3778, 3793, 3102, 3640, 3047, 3567, 3715, 3099, 3296, 3628, 3684, 3720, 3775, 3533, 3535, 3025, 3801, 3014, 4789, 3818, 3770, 3001, 3302, 3693, 3015, 3632, 3779, 3629, 3013, 3619, 3298, 3819, 3217, 3190, 3665, 3549, 3689, 3560, 3623, 3076, 3674, 7012, 3082, 3184, 3612, 3800, 3502, 3728, 3146, 3075, 3553, 3174, 3031, 3011, 3051, 3103, 3681, 3523, 3544, 3837, 3734, 3021, 3591, 3182, 3796, 3057, 4119, 3068, 3505, 3052, 3538, 3583, 3706, 3829, 3033, 3548, 3703, 3816, 3745, 3723, 3772, 3636, 3572, 3559, 3248, 3512, 3236, 3066, 3644, 3558, 3617, 3794, 3602, 3019, 3536, 3649, 3671, 3545, 3783, 3737, 3016, 3297, 3657, 3521, 3543, 3747, 3717, 3635, 3643, 3223, 3653, 3084, 3010, 3615, 3663, 3730, 3641, 3625, 3718, 3608, 3081, 3575, 3519, 3570, 3784, 3256, 3206, 4468, 3752, 3754, 3196, 3596, 3651, 3515, 3573, 3528, 3658, 3028, 3064, 3035, 3078, 4131, 3183, 3008, 3178, 4411, 3647, 4582, 3645, 3680, 3247, 3044, 3662, 3782, 3790, 3513, 3741, 3672, 3661, 3175, 4511, 3655, 3020, 3561, 3825, 3709, 3607, 3180, 6513, 3292, 3690, 3072, 3509, 3613, 3799, 3811, 3034, 3562, 4722, 3660, 3802, 3688, 3542, 3597, 3125, 3552, 3069, 3710, 3795, 3042, 3240, 3136, 3079, 3832, 3127, 3129, 3822, 4111, 3555, 3022, 3791, 3642, 3590, 3211, 3228, 3032, 3773, 3177, 3520, 3077, 3639, 3161, 3007, 3687, 4723, 3721, 3219, 3598, 3504, 4121, 3698, 3780, 3604, 3667, 3638, 3508, 3740, 3065, 3191, 3038, 3024, 3267, 3581, 3579, 3835, 3111, 3506, 3246, 3676, 3731, 3678, 3294, 3295, 3245, 3234, 3132, 3750, 3299, 3774, 3586, 3539, 3700, 3675, 3005, 3618, 3650, 3009, 3004, 3812)
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC;      
    

SELECT * FROM MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS  WHERE LOWER(NAME) LIKE 'uber%' AND lower(NAME) NOT IN ('ubersuggest', 'uberconference', 'uberpayment', 'uber*eats', 'uber eats','uberconference san francisco ca', 'uberuae_eats', 'ubersuggest -neilpatel');    

SELECT * 
    FROM MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS  mcrd_mch
        WHERE  (( LOWER(mcrd_mch.NAME) LIKE 'uber%' )OR ( LOWER(mcrd_mch.NAME) LIKE 'ubr%' ) )  AND lower(NAME) NOT IN ('ubersuggest', 'uberconference', 'uberpayment', 'uber*eats', 'uber eats','uberconference san francisco ca', 'uberuae_eats', 'ubersuggest -neilpatel');    
        
  
    
    
-- Volumes pour BP

SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume ", COUNT(exp.AMOUNT) AS "Number ", ROUND(AVG(exp.AMOUNT/-1), 2) AS " Average expenses"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    exp.CREATED_AT >= TO_DATE('2021-01-01') AND LOWER(NAME) LIKE 'bp%' AND LOWER(NAME) NOT LIKE 'bpc%' AND LOWER(NAME) NOT LIKE 'bps%' AND LOWER(NAME) NOT IN ('bp2o', 'bpost 111100-0581 boussu', 'bpa comercio atacarejo brumadinho', 'bpost nv', 'ppjc', 'bpsp', 'bplp orsay', 'bpk kitzbuehel pi t erpfe')    
    --exp.CREATED_AT >= TO_DATE('2021-01-01') AND TO_DATE('2021-12-31') AND LOWER(NAME) LIKE '%intermarché%'
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC;       
    
    
SELECT * FROM MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS  WHERE LOWER(NAME) LIKE 'bp%' AND LOWER(NAME) NOT LIKE 'bpc%' AND LOWER(NAME) NOT LIKE 'bps%' AND LOWER(NAME) NOT IN ('bp2o', 'bpost 111100-0581 boussu', 'bpa comercio atacarejo brumadinho', 'bpost nv', 'ppjc', 'bpsp', 'bplp orsay', 'bpk kitzbuehel pi t erpfe');    
    
    
-- Data For Alex

with bins as (
SELECT up.COMPANY_ID,
        date_trunc('MONTH', up.CREATED_AT) as TIME,
        WIDTH_BUCKET(SUM(ABS(e.AMOUNT)), 0, 10000,1) as S1,
        WIDTH_BUCKET(SUM(ABS(e.AMOUNT)), 10000, 50000,1) as S2,
        WIDTH_BUCKET(SUM(ABS(e.AMOUNT)), 50000, 100000,1) as S3,
        WIDTH_BUCKET(SUM(ABS(e.AMOUNT)), 100000, 500000,1) as S4
FROM "MY_DATABASE"."PUBLIC"."EXPENSES" as e
LEFT JOIN "MY_DATABASE"."PUBLIC"."USER_PROFILES" as up on up.ID = e.USER_PROFILE_ID
GROUP BY up.COMPANY_ID, TIME
LIMIT 1000
)
SELECT TIME, 'S1', COUNT(*) as NUMBER FROM bins WHERE S1 = 1 GROUP BY TIME
UNION
SELECT TIME, 'S2', COUNT(*) as NUMBER FROM bins WHERE S2 = 1 GROUP BY TIME
UNION
SELECT TIME, 'S3', COUNT(*) as NUMBER FROM bins WHERE S3 = 1 GROUP BY TIME
UNION
SELECT TIME, 'S4', COUNT(*) as NUMBER FROM bins WHERE S4 = 1 GROUP BY TIME;
    
    
-- Volume Ranges 

SELECT
CASE WHEN Total_SUM <= 9999 THEN '10.K€'
     WHEN Total_SUM BETWEEN 10000 AND 49999 THEN '10 K€ à 50 K€'
     WHEN Total_SUM BETWEEN 50000 AND 99999 THEN '50 K€ à 100K€'
     WHEN Total_SUM BETWEEN 100000 AND 499999 THEN '100 K€ à 500 K€'
     WHEN Total_SUM >= 500000 THEN '>500 K€'
     END AS Volume,  
COUNT(COMPANY_ID) AS NUM_Companies FROM (
SELECT 
    exp.COMPANY_ID, ROUND(SUM(exp.AMOUNT/-1), 2) AS Total_SUM 
FROM 
    MY_DATABASE.PUBLIC.EXPENSES exp 
WHERE DATE_TRUNC(MONTH, exp.CREATED_AT) = '2022-05-01' 
GROUP BY exp.COMPANY_ID
)
GROUP BY Volume
ORDER BY NUM_Companies DESC;    


-- Volumes for specific countries

SELECT
COUNTRY,
CASE WHEN Total_SUM <= 9999 THEN '10.K€'
     WHEN Total_SUM BETWEEN 10000 AND 49999 THEN '10 K€ à 50 K€'
     WHEN Total_SUM BETWEEN 50000 AND 99999 THEN '50 K€ à 100K€'
     WHEN Total_SUM BETWEEN 100000 AND 499999 THEN '100 K€ à 500 K€'
     WHEN Total_SUM >= 500000 THEN '>500 K€'
     END AS Volume,  
COUNT(COMPANY_ID) AS NUM_Companies FROM (
SELECT 
    CASE WHEN addr.COUNTRY = 'NL' THEN 'NLD'
         WHEN addr.COUNTRY = 'FR' THEN 'FRA'                           
         WHEN addr.COUNTRY = 'IT' THEN 'ITA'
         WHEN addr.COUNTRY = 'ES' THEN 'ESP'
         WHEN addr.COUNTRY = 'GB' THEN 'GBR'
         WHEN addr.COUNTRY = 'DE' THEN 'DEU'
         WHEN addr.COUNTRY = 'CH' THEN 'CHE' 
         WHEN addr.COUNTRY = 'BE' THEN 'BEL'
         ELSE addr.COUNTRY    
         END AS COUNTRY,
    exp.COMPANY_ID, ROUND(SUM(exp.AMOUNT/-1), 2) AS Total_SUM 
FROM 
    MY_DATABASE.PUBLIC.EXPENSES exp 
INNER JOIN
    MY_DATABASE.PUBLIC.ADDRESSES addr
ON
    exp.COMPANY_ID = addr.ADDRESSABLE_ID
WHERE DATE_TRUNC(MONTH, exp.CREATED_AT) = '2022-05-01'     
    AND addr.ADDRESSABLE_TYPE = 'Company'
GROUP BY addr.COUNTRY, exp.COMPANY_ID
)
GROUP BY COUNTRY,Volume
ORDER BY COUNTRY ASC; 

-- Top 10
SELECT 
    exp.COMPANY_ID, comp.NAME, ROUND(SUM(exp.AMOUNT/-1), 2) AS Total_SUM 
FROM 
    MY_DATABASE.PUBLIC.EXPENSES exp 
INNER JOIN
    MY_DATABASE.PUBLIC.COMPANIES comp
ON
    exp.COMPANY_ID = comp.ID
WHERE comp.CONTRACT = 0
GROUP BY exp.COMPANY_ID, comp.NAME
ORDER BY Total_SUM DESC
LIMIT 10;   



SELECT 
    CASE WHEN addr.COUNTRY = 'NL' THEN 'NLD'
         WHEN addr.COUNTRY = 'FR' THEN 'FRA'                           
         WHEN addr.COUNTRY = 'IT' THEN 'ITA'
         WHEN addr.COUNTRY = 'ES' THEN 'ESP'
         WHEN addr.COUNTRY = 'GB' THEN 'GBR'
         WHEN addr.COUNTRY = 'DE' THEN 'DEU'
         WHEN addr.COUNTRY = 'CH' THEN 'CHE' 
         WHEN addr.COUNTRY = 'BE' THEN 'BEL'
         ELSE addr.COUNTRY    
         END AS COUNTRY,
    exp.COMPANY_ID, ROUND(SUM(exp.AMOUNT/-1), 2) AS Total_SUM 
FROM 
    MY_DATABASE.PUBLIC.EXPENSES exp 
INNER JOIN
    MY_DATABASE.PUBLIC.ADDRESSES addr
ON
    exp.COMPANY_ID = addr.ADDRESSABLE_ID
WHERE DATE_TRUNC(MONTH, exp.CREATED_AT) = '2022-05-01' 
    AND addr.ADDRESSABLE_TYPE = 'Company'
GROUP BY addr.COUNTRY, exp.COMPANY_ID;

        
SELECT DISTINCT COUNTRY FROM  (SELECT 
    CASE WHEN addr.COUNTRY = 'NL' THEN 'NLD'
         WHEN addr.COUNTRY = 'FR' THEN 'FRA'                           
         WHEN addr.COUNTRY = 'IT' THEN 'ITA'
         WHEN addr.COUNTRY = 'ES' THEN 'ESP'
         WHEN addr.COUNTRY = 'GB' THEN 'GBR'
         WHEN addr.COUNTRY = 'DE' THEN 'DEU'
         WHEN addr.COUNTRY = 'CH' THEN 'CHE' 
         WHEN addr.COUNTRY = 'BE' THEN 'BEL'
         ELSE addr.COUNTRY    
         END AS COUNTRY,                      
    exp.COMPANY_ID, ROUND(SUM(exp.AMOUNT/-1), 2) AS Total_SUM 
FROM 
    MY_DATABASE.PUBLIC.EXPENSES exp 
INNER JOIN
    MY_DATABASE.PUBLIC.ADDRESSES addr
ON
    exp.COMPANY_ID = addr.ADDRESSABLE_ID
WHERE DATE_TRUNC(MONTH, exp.CREATED_AT) = '2022-05-01' 
    AND addr.ADDRESSABLE_TYPE = 'Company'
GROUP BY addr.COUNTRY, exp.COMPANY_ID)
ORDER BY COUNTRY DESC;    
    

-- TOP 10 Companies

SELECT 
    --comp.NAME,
    exp.COMPANY_ID, ROUND(SUM(exp.AMOUNT/-1), 2) AS Total_SUM 
FROM 
    MY_DATABASE.PUBLIC.EXPENSES exp 
INNER JOIN
    MY_DATABASE.PUBLIC.COMPANIES comp
ON
    exp.COMPANY_ID = comp.ID
--WHERE DATE_TRUNC(MONTH, exp.CREATED_AT) = '2022-05-01' 
GROUP BY exp.COMPANY_ID
--, comp.NAME
ORDER BY Total_SUM DESC
LIMIT 10;
    
    
SELECT 
    exp.COMPANY_ID, comp.NAME, ROUND(SUM(exp.AMOUNT/-1), 2) AS Total_SUM 
FROM 
    MY_DATABASE.PUBLIC.EXPENSES exp 
INNER JOIN
    MY_DATABASE.PUBLIC.COMPANIES comp
ON
    exp.COMPANY_ID = comp.ID
WHERE comp.CONTRACT = 0
GROUP BY exp.COMPANY_ID, comp.NAME
ORDER BY Total_SUM DESC
LIMIT 10;    
    

SELECT 
    LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Total_Expense", COUNT(exp.AMOUNT) AS "Number_of_Expenses", ROUND(AVG(exp.AMOUNT/-1), 2) AS "Average_Expenses"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
WHERE 
    INVOICE_COUNTRY IN ('Spain', 'ESP') AND exp.CREATED_AT BETWEEN TO_DATE('2022-01-01') AND TO_DATE('2022-06-30') 
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC;  
    
    
    
SELECT DISTINCT STATUS FROM MY_DATABASE.PUBLIC.CARDS;    
--TYPE    
SELECT 
CASE WHEN lc.TYPE = 0 THEN 'Corporate'
     WHEN lc.TYPE = 1 THEn 'X'
     WHEN lc.TYPE = 2 THEn 'Mobility'
     END AS LICENSES,     
COUNT(crd.ID) AS Active_Cards FROM MY_DATABASE.PUBLIC.CARDS crd
INNER JOIN MY_DATABASE.PUBLIC.LICENSES lc
ON crd.LICENSE_ID = lc.ID
WHERE BRANDED_AT IS NOT NULL AND DISABLE_AT IS NULL 
GROUP BY lc.TYPE;


SELECT COUNT(DISTINCT crd.ID) FROM MY_DATABASE.PUBLIC.CARDS crd WHERE STATUS = 5;
    
    
    
    
-- Do the one for INDIGO and pay attention to Cards of Public Companies

SELECT * FROM MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS  WHERE LOWER(NAME) LIKE '%indigo%';

SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume ", COUNT(exp.AMOUNT) AS "Number ", ROUND(AVG(exp.AMOUNT/-1), 2) AS " Average expenses"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    exp.CREATED_AT >= TO_DATE('2021-01-01') AND LOWER(NAME) LIKE 'bp%' AND LOWER(NAME) NOT LIKE 'bpc%' AND LOWER(NAME) NOT LIKE 'bps%' AND LOWER(NAME) NOT IN ('bp2o', 'bpost 111100-0581 boussu', 'bpa comercio atacarejo brumadinho', 'bpost nv', 'ppjc', 'bpsp', 'bplp orsay', 'bpk kitzbuehel pi t erpfe')    
    --exp.CREATED_AT >= TO_DATE('2021-01-01') AND TO_DATE('2021-12-31') AND LOWER(NAME) LIKE '%intermarché%'
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC;    


-- Recurrent Expenses on carglass
-- Clients_récurrents_cxhez_Carglass
SELECT CARD_ID, NAME AS COMPANY_NAME, COUNT(CARD_ID) AS occurance FROM (
SELECT 
    exp.CREATED_AT, exp.COMPANY_ID, crd.ID AS CARD_ID, comp .NAME
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID
INNER JOIN 
    MY_DATABASE.PUBLIC.CARDS crd
ON 
    crd.ID = crd_exp.CARD_ID 
INNER JOIN 
    MY_DATABASE.PUBLIC.COMPANIES comp
ON 
    comp.ID = exp.COMPANY_ID        
WHERE
   LOWER(mcrd_mch.NAME) LIKE '%carglass%' 
   AND comp.CONTRACT = 0
)
GROUP BY CARD_ID, NAME
HAVING occurance > 1
ORDER BY occurance DESC
   ;


--Nombre de carte mobility secteur public qui ont déjà fait des transactions dans un parking INDIGO 

SELECT COUNT(DISTINCT CARD_ID) FROM(    
SELECT 
    exp.CREATED_AT, exp.COMPANY_ID, crd_exp.CARD_ID, comp.CONTRACT
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID
INNER JOIN
     MY_DATABASE.PUBLIC.COMPANIES comp
ON
    comp.ID = exp.COMPANY_ID
WHERE
   LOWER(mcrd_mch.NAME) LIKE '%indigo%' 
   AND comp.CONTRACT IN (4, 3, 1)
   --AND exp.CREATED_AT BETWEEN TO_DATE('2021-08-01') AND TO_DATE('2022-08-31')
)
;
    

-- Quelle est la plus grosse flottes de carte de mobility qui ne dépense pas chez Carglass ? Top 5 idéalement.


-- Top 5 flottes de carte de mobility Private Contract company
CREATE OR REPLACE VIEW MY_DATABASE.PUBLIC.Top_Mobility_Card_Fleets AS 
SELECT 
    crd.COMPANY_ID, comp.NAME, COUNT(crd.COMPANY_ID) AS Num_cards 
FROM 
    MY_DATABASE.PUBLIC.CARDS crd
INNER JOIN 
    MY_DATABASE.PUBLIC.LICENSES lc
ON 
    crd.LICENSE_ID = lc.ID 
INNER JOIN 
    MY_DATABASE.PUBLIC.COMPANIES comp
ON 
    comp.ID = crd.COMPANY_ID  
WHERE lc.TYPE = 2     
AND comp.CONTRACT  = 0
GROUP BY crd.COMPANY_ID, comp.NAME 
ORDER BY Num_cards DESC;   
    
SELECT * FROM MY_DATABASE.PUBLIC.Top_Mobility_Card_Fleets;


-- Dépenses cartes mobilité chez Carglass

CREATE OR REPLACE VIEW MY_DATABASE.PUBLIC.Mobility_Expense_at_carglass AS 
SELECT 
    exp.CREATED_AT, exp.AMOUNT, exp.COMPANY_ID, crd.ID AS CARD_ID, lc.TYPE
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID
INNER JOIN 
    MY_DATABASE.PUBLIC.CARDS crd
ON 
    crd.ID = crd_exp.CARD_ID 
INNER JOIN 
    MY_DATABASE.PUBLIC.LICENSES lc
ON 
    crd.LICENSE_ID = lc.ID        
WHERE
   LOWER(mcrd_mch.NAME) LIKE '%carglass%' 
   AND lc.TYPE = 2
   ;    
    
SELECT * FROM MY_DATABASE.PUBLIC.Mobility_Expense_at_carglass ;    
    
-- ** Flottes_de_carte_de_mobility_qui_ne_dépense_pas_chez_Carglass **    

SELECT * FROM MY_DATABASE.PUBLIC.Top_Mobility_Card_Fleets mob_flt 
    WHERE mob_flt.COMPANY_ID NOT IN (SELECT COMPANY_ID FROM MY_DATABASE.PUBLIC.Mobility_Expense_at_carglass) ORDER BY Num_cards DESC LIMIT 5;   
    
    
    
-- Dépenses cartes mobilité chez Norauto

CREATE OR REPLACE VIEW MY_DATABASE.PUBLIC.Mobility_Expense_at_Norauto AS 
SELECT 
    exp.CREATED_AT, exp.AMOUNT, exp.COMPANY_ID, crd.ID AS CARD_ID, lc.TYPE
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID
INNER JOIN 
    MY_DATABASE.PUBLIC.CARDS crd
ON 
    crd.ID = crd_exp.CARD_ID 
INNER JOIN 
    MY_DATABASE.PUBLIC.LICENSES lc
ON 
    crd.LICENSE_ID = lc.ID        
WHERE
   LOWER(mcrd_mch.NAME) LIKE '%norauto%' 
   AND lc.TYPE = 2
   ;            
   
   
-- ** Flottes_de_carte_de_mobility_qui_dépense_pas_chez_Norauto**    

SELECT * FROM MY_DATABASE.PUBLIC.Top_Mobility_Card_Fleets mob_flt 
    WHERE mob_flt.COMPANY_ID IN (SELECT COMPANY_ID FROM MY_DATABASE.PUBLIC.Mobility_Expense_at_Norauto) ORDER BY Num_cards DESC LIMIT 5;   
     



-- Dépenses cartes mobilité chez Speedy

CREATE OR REPLACE VIEW MY_DATABASE.PUBLIC.Mobility_Expense_at_Speedy AS 
SELECT 
    exp.CREATED_AT, exp.AMOUNT, exp.COMPANY_ID, crd.ID AS CARD_ID, lc.TYPE
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID
INNER JOIN 
    MY_DATABASE.PUBLIC.CARDS crd
ON 
    crd.ID = crd_exp.CARD_ID 
INNER JOIN 
    MY_DATABASE.PUBLIC.LICENSES lc
ON 
    crd.LICENSE_ID = lc.ID        
WHERE
   LOWER(mcrd_mch.NAME) LIKE '%speedy%' 
   AND lc.TYPE = 2
   ;            
   
   
-- ** Flottes_de_carte_de_mobility_qui_dépense_pas_chez_Speedy**    

SELECT * FROM MY_DATABASE.PUBLIC.Top_Mobility_Card_Fleets mob_flt 
    WHERE mob_flt.COMPANY_ID IN (SELECT COMPANY_ID FROM MY_DATABASE.PUBLIC.Mobility_Expense_at_Speedy) ORDER BY Num_cards DESC LIMIT 5; 



-- Dépenses cartes mobilité chez Rapid pare-brise
-- Les données pour Mondial pare-brise, France pare-brise et Rapid pare-brise n'existent pas.

--CREATE OR REPLACE VIEW MY_DATABASE.PUBLIC.Mobility_Expense_at_Mondial_Pare-Brise AS 
SELECT 
    exp.CREATED_AT, exp.AMOUNT, exp.COMPANY_ID, crd.ID AS CARD_ID, lc.TYPE
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID
INNER JOIN 
    MY_DATABASE.PUBLIC.CARDS crd
ON 
    crd.ID = crd_exp.CARD_ID 
INNER JOIN 
    MY_DATABASE.PUBLIC.LICENSES lc
ON 
    crd.LICENSE_ID = lc.ID        
WHERE
   LOWER(mcrd_mch.NAME) LIKE '%rapid pare-brise%' 
   AND lc.TYPE = 2
   ;            
   
   
-- ** Flottes_de_carte_de_mobility_qui_dépense_pas_chez_Speedy**    

SELECT * FROM MY_DATABASE.PUBLIC.Top_Mobility_Card_Fleets mob_flt 
    WHERE mob_flt.COMPANY_ID IN (SELECT COMPANY_ID FROM MY_DATABASE.PUBLIC.Mobility_Expense_at_Speedy) ORDER BY Num_cards DESC LIMIT 5; 



SELECT * FROM MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS  WHERE LOWER(NAME) LIKE '%rapid pare-brise%';


-- Data Request infogreffe

SELECT * FROM MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS  WHERE LOWER(NAME) LIKE '%infogreffe%';
    
SELECT NAME AS COMPANY_NAME, COUNT(*) AS Number_Exp, SUM(AMOUNT) AS Total_AMOUNT_Spent FROM (    
SELECT 
    exp.CREATED_AT, ROUND(exp.AMOUNT/-1,2) AS Amount, exp.COMPANY_ID, crd_exp.CARD_ID, comp.CONTRACT, comp.NAME
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID
INNER JOIN
     MY_DATABASE.PUBLIC.COMPANIES comp
ON
    comp.ID = exp.COMPANY_ID
WHERE
   LOWER(mcrd_mch.NAME) LIKE '%infogreffe%'
)
GROUP BY COMPANY_ID, NAME
ORDER BY Total_AMOUNT_Spent DESC
;    
    
    
SELECT * FROm MY_DATABASE.PUBLIC.RECEIPTS WHERE ID = '7fc479c2-0c80-41ed-b244-81d7fb4d0238';    
    
SELECT * FROm MY_DATABASE.PUBLIC.EXPENSES WHERE RECEIPT_CODE = 'F22-58889260';   
    
    
    

SELECT * FROM MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS  WHERE LOWER(NAME) LIKE '%atlandes%';
    

SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume ", COUNT(exp.AMOUNT) AS "Number ", ROUND(AVG(exp.AMOUNT/-1), 2) AS " Average expenses"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    exp.CREATED_AT >= TO_DATE('2021-01-01') AND LOWER(NAME) LIKE 'atlandes%' 

GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC
;       
  
SELECT 
        PERIOD, FUEL_CODE, ROUND(SUM(AMOUNTS), 2) AS "Volume ", COUNT(AMOUNTS) AS "Number ", ROUND(AVG(AMOUNTS), 2) AS " Average expenses"
FROM(   
    
SELECT 
      exp.ID AS EXP_ID, exp.COMPANY_ID, exp.CREATED_AT, 
      CASE WHEN vhcle.FUEL_CODE = 4 THEN 3
      ELSE vhcle.FUEL_CODE
      END AS FUEL_CODE,
      LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(exp.AMOUNT/-1, 2) AS "Amounts"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
INNER JOIN
    MY_DATABASE.PUBLIC.CARDS crd
ON
    crd_exp.CARD_ID = crd.ID   
INNER JOIN
    MY_DATABASE.PUBLIC.VEHICLES vhcle
ON
    vhcle.ID = crd.VEHICLE_ID      
WHERE 
    exp.CREATED_AT >= TO_DATE('2021-01-01') AND LOWER(mcrd_mch.NAME) LIKE 'atlandes%'
)
GROUP BY PERIOD, FUEL_CODE     
ORDER BY PERIOD ASC
    ;     
    
    
/*

INNER JOIN
    MY_DATABASE.PUBLIC.VEHICLES vhcle
ON
    vhcle.COMPANY_ID = exp.COMPANY_ID  

*/    


SELECT 
      exp.ID AS EXP_ID, exp.COMPANY_ID, exp.CREATED_AT, 
      CASE WHEN vhcle.FUEL_CODE = 4 THEN 3
      ELSE vhcle.FUEL_CODE
      END AS FUEL_CODE,
      LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(exp.AMOUNT/-1, 2) AS "Amounts"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
INNER JOIN
    MY_DATABASE.PUBLIC.CARDS crd
ON
    crd_exp.CARD_ID = crd.ID   
INNER JOIN
    MY_DATABASE.PUBLIC.VEHICLES vhcle
ON
    vhcle.ID = crd.VEHICLE_ID      
WHERE 
    exp.CREATED_AT >= TO_DATE('2021-01-01') AND LOWER(mcrd_mch.NAME) LIKE 'atlandes%';
    
    
    
    
    
--Traineline Data request 31-08-2022    

CREATE OR REPLACE VIEW MY_DATABASE.PUBLIC.Trainline_Data AS
SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume", COUNT(exp.AMOUNT) AS "Number of Expenses", ROUND(AVG(exp.AMOUNT/-1), 2) AS " Average expenses"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    exp.CREATED_AT >= TO_DATE('2021-01-01') AND LOWER(NAME) LIKE '%Tesla%'
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC; 

SELECT * FROM MY_DATABASE.PUBLIC.Trainline_Data;

    
CREATE OR REPLACE VIEW MY_DATABASE.PUBLIC.Only_Train AS 
SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Total_Volume", COUNT(exp.AMOUNT) AS "Total_Number_of_Rides", ROUND(AVG(exp.AMOUNT/-1), 2) AS "Average_Total_Expenses"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    exp.CREATED_AT >= TO_DATE('2021-01-01') AND mcrd_mch.MERCHANT_CATEGORY_CODE IN (4011, 4111, 4112, 4131, 4722, 4411, 4468)
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC;  

SELECT * FROM MY_DATABASE.PUBLIC.Only_Train;        
    
    
SELECT 
    trnlndta.* , ROUND((trnlndta.VOLUME / all_trndta.TOTAL_VOLUME) * 100,2) AS "Percentage of Market",  all_trndta.TOTAL_VOLUME, all_trndta.TOTAL_NUMBER_OF_RIDES, all_trndta.AVERAGE_TOTAL_EXPENSES 
FROM 
    MY_DATABASE.PUBLIC.Trainline_Data trnlndta
INNER JOIN
    MY_DATABASE.PUBLIC.Only_Train all_trndta
ON
    trnlndta.PERIOD = all_trndta.PERIOD;
    
    
    
SELECT COMPANY_ID, comp.NAME, COUNT(DISTINCT USER_PROFILE_ID) AS Number_of_Cards FROM MY_DATABASE.PUBLIC.CARDS GROUP BY COMPANY_ID ORDER BY Number_of_Cards DESC;    
    
SELECT 
    crd.COMPANY_ID, comp.NAME, COUNT(DISTINCT crd.USER_PROFILE_ID) AS Number_of_Cards     
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.CARDS crd
ON
    crd.ID = crd_exp.CARD_ID
INNER JOIN
    MY_DATABASE.PUBLIC.COMPANIES comp
ON
    comp.ID = exp.COMPANY_ID    
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID      
WHERE 
    exp.CREATED_AT >= TO_DATE('2021-08-01') AND LOWER(mcrd_mch.NAME) LIKE '%trainline%'
GROUP BY crd.COMPANY_ID, comp.NAME    
ORDER BY Number_of_Cards DESC;    
    
    
SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume", COUNT(exp.AMOUNT) AS "Number of Expenses", ROUND(AVG(exp.AMOUNT/-1), 2) AS " Average expenses"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    exp.CREATED_AT >= TO_DATE('2021-01-01') AND LOWER(NAME) LIKE '%tesla%'
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC;     
    
    
        
    
-- La Felicita    
SELECT * FROM MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS  WHERE LOWER(NAME) LIKE '%felicita%';

SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume", COUNT(exp.AMOUNT) AS "Number of Expenses", ROUND(AVG(exp.AMOUNT/-1), 2) AS " Average expenses"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    exp.CREATED_AT >= TO_DATE('2021-01-01') AND LOWER(NAME) LIKE '%felicita%'
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC;  
    
    
-- expense_volume_La_felicita__13_09_2022


-- Rolls Jeuneurs
    
SELECT * FROM MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS  WHERE LOWER(NAME) LIKE '%cooltra%';

SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume", COUNT(exp.AMOUNT) AS "Number of Expenses", ROUND(AVG(exp.AMOUNT/-1), 2) AS " Average expenses"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    exp.CREATED_AT >= TO_DATE('2021-01-01') AND LOWER(NAME) LIKE '%felicita%'
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC;      
    


-- expense_volume_cooltra__26_09_2022

SELECT * FROM MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS  WHERE LOWER(NAME) LIKE '%cooltra%';


SELECT 
        INVOICE_COUNTRY, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume", COUNT(exp.AMOUNT) AS "Number of Expenses", ROUND(AVG(exp.AMOUNT/-1), 2) AS " Average expenses"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    LOWER(NAME) LIKE '%cooltra%'
GROUP BY INVOICE_COUNTRY    
ORDER BY Volume DESC;  
    
    
-- expense_volume_freenow_kapten__26_09_2022
    
SELECT * FROM MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch  WHERE lower(mcrd_mch.NAME) LIKE '%freenow%' OR lower(mcrd_mch.NAME) LIKE '%kapten%' OR lower(mcrd_mch.NAME) LIKE '%free now%' OR LOWER(NAME) LIKE '%chauffeurprive%';
    
SELECT 
        INVOICE_COUNTRY, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume", COUNT(exp.AMOUNT) AS "Number of Expenses", ROUND(AVG(exp.AMOUNT/-1), 2) AS " Average expenses"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    lower(mcrd_mch.NAME) LIKE '%freenow%' OR lower(mcrd_mch.NAME) LIKE '%kapten%' OR lower(mcrd_mch.NAME) LIKE '%free now%' OR LOWER(NAME) LIKE '%chauffeurprive%'
GROUP BY INVOICE_COUNTRY    
ORDER BY Volume DESC;      
    
    
    
    
-- expense_volume_Tamoil__29_09_2022


SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume", COUNT(exp.AMOUNT) AS "Number of Expenses", COUNT(DISTINCT crd_exp.CARD_ID) AS "Number of Cards", ROUND(AVG(exp.AMOUNT/-1), 2) AS " Average expenses"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    exp.CREATED_AT >= TO_DATE('2020-01-01') AND LOWER(NAME) LIKE '%tamoil%' AND INVOICE_COUNTRY = 'DEU'
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC;   


-- expense_volume_Avia__26_09_2022

SELECT * FROM MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS  WHERE LOWER(NAME) LIKE '%avia%';


-- Fuel_Expenses_at_AVIA_Fr_It_2020_to_2022_done_at_03_10_2022

SELECT 
        INVOICE_COUNTRY, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume", COUNT(exp.AMOUNT) AS "Number of Expenses", ROUND(AVG(exp.AMOUNT/-1), 2) AS " Average expenses"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    exp.CREATED_AT >= TO_DATE('2020-01-01') AND LOWER(NAME) LIKE '%avia%' AND mcrd_mch.MERCHANT_CATEGORY_CODE IN (5172, 5331, 5411, 5511, 5533, 5541, 5542, 5983, 7349, 7538, 7542) AND INVOICE_COUNTRY IN ('FRA', 'ITA', 'FR', 'IT')
GROUP BY INVOICE_COUNTRY    
ORDER BY Volume DESC;  

-- Fuel_Expenses_at_AVIA_2020_to_2022_done_at_03_10_2022
SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume", COUNT(exp.AMOUNT) AS "Number of Expenses", ROUND(AVG(exp.AMOUNT/-1), 2) AS " Average expenses"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    exp.CREATED_AT >= TO_DATE('2020-01-01') AND LOWER(NAME) LIKE '%avia%' AND mcrd_mch.MERCHANT_CATEGORY_CODE IN (5172, 5331, 5411, 5511, 5533, 5541, 5542, 5983, 7349, 7538, 7542) -- AND INVOICE_COUNTRY IN ('FRA', 'ITA', 'FR', 'IT')
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC;   


-- Fuel_Expenses_2020_to_2022_done_at_03_10_2022
SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume", COUNT(exp.AMOUNT) AS "Number of Expenses", ROUND(AVG(exp.AMOUNT/-1), 2) AS " Average expenses"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    exp.CREATED_AT >= TO_DATE('2020-01-01') AND mcrd_mch.MERCHANT_CATEGORY_CODE IN (5172, 5331, 5411, 5511, 5533, 5541, 5542, 5983, 7349, 7538, 7542) -- AND INVOICE_COUNTRY IN ('FRA', 'ITA', 'FR', 'IT')
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC; 


-- Fuel_Expenses_AVIA_FR_2020_to_2022_done_at_03_10_2022
SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume", COUNT(exp.AMOUNT) AS "Number of Expenses", ROUND(AVG(exp.AMOUNT/-1), 2) AS " Average expenses"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    exp.CREATED_AT >= TO_DATE('2020-01-01') AND LOWER(NAME) LIKE '%avia%' AND mcrd_mch.MERCHANT_CATEGORY_CODE IN (5172, 5331, 5411, 5511, 5533, 5541, 5542, 5983, 7349, 7538, 7542) AND INVOICE_COUNTRY IN ('FRA', 'FR')
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC; 


-- Fuel_Expenses_AVIA_IT_2020_to_2022_done_at_03_10_2022
SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume", COUNT(exp.AMOUNT) AS "Number of Expenses", ROUND(AVG(exp.AMOUNT/-1), 2) AS " Average expenses"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    exp.CREATED_AT >= TO_DATE('2020-01-01') AND LOWER(NAME) LIKE '%avia%' AND mcrd_mch.MERCHANT_CATEGORY_CODE IN (5172, 5331, 5411, 5511, 5533, 5541, 5542, 5983, 7349, 7538, 7542) AND INVOICE_COUNTRY IN ('ITA', 'IT')
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC; 
 

--5172 5331 5411 5511 5533 5541 5542 5983 7349 7538 7542




SELECT 
     CASE WHEN acc.INDUSTRY IS NULL THEN 'Uncategorized'
     ELSE acc.INDUSTRY
     END AS INDUSTRY, 
     ROUND(SUM(exp.AMOUNT/-1), 2) AS Total_Expense, COUNT(*) AS Number_of_Expenses, ROUND(AVG(exp.AMOUNT/-1), 2) AS Average_Expense
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID 
INNER JOIN
    SAS_APPS.SALESFORCE.ACCOUNT acc
ON 
    exp.COMPANY_ID = acc.MOONCARDCOMPANYID__C    
WHERE 
     LOWER(mcrd_mch.NAME) LIKE '%carglass%'
GROUP BY acc.INDUSTRY
ORDER BY Total_Expense DESC;


-- Number of distinct cards that have onced used a Trainline Merchant

SELECT COUNT(DISTINCT CARD_ID) FROM(    
SELECT 
    exp.CREATED_AT, exp.COMPANY_ID, crd_exp.CARD_ID, comp.CONTRACT
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID
INNER JOIN
     MY_DATABASE.PUBLIC.COMPANIES comp
ON
    comp.ID = exp.COMPANY_ID
WHERE
   LOWER(mcrd_mch.NAME) LIKE '%trainline%' 
   --AND comp.CONTRACT IN (4, 3, 1)
   AND exp.CREATED_AT BETWEEN TO_DATE('2021-08-01') AND TO_DATE('2022-08-31')
)
;

SELECT * FROM MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS  WHERE LOWER(NAME) LIKE '%trainline%';



CREATE OR REPLACE VIEW MY_DATABASE.PUBLIC.COMPANY_INDUSTRY AS
SELECT 
     acc.MOONCARDCOMPANYID__C AS COMPANY_ID,acc.NAME,CASE WHEN acc.INDUSTRY IS NULL THEN 'Uncategorized'
     ELSE acc.INDUSTRY
     END AS INDUSTRY
FROM SAS_APPS.SALESFORCE.ACCOUNT acc
WHERE acc.MOONCARDCOMPANYID__C IS NOT NULL;

SELECT * FROM MY_DATABASE.PUBLIC.COMPANY_INDUSTRY;


CREATE OR REPLACE VIEW MY_DATABASE.PUBLIC.COMPANY_EXPENSE_CATEGORISATION AS
SELECT * FROM(
SELECT 
    exp.COMPANY_ID, exp_ctg.NAME, ROUND(SUM(exp.AMOUNT/-1), 2) AS Volume,
    row_number() OVER (PARTITION BY exp.COMPANY_ID ORDER BY Volume DESC) as Exp_Cat_Rank
FROM 
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN
    MY_DATABASE.PUBLIC.EXPENSE_CATEGORIES exp_ctg
ON
    exp.EXPENSE_CATEGORY_ID = exp_ctg.ID
GROUP BY exp.COMPANY_ID, exp_ctg.NAME
ORDER BY exp.COMPANY_ID, VOLUME DESC) Exp_Cat_Ranking
where Exp_Cat_Rank <= 3;    


SELECT * FROM MY_DATABASE.PUBLIC.COMPANY_EXPENSE_CATEGORISATION;

CREATE OR REPLACE VIEW MY_DATABASE.PUBLIC.COMPANY_EXPENSE_CATEGORISATION_DATA AS
SELECT 
    comp_ind.COMPANY_ID, comp_ind.NAME AS COMPANY_NAME, comp_ind.INDUSTRY, comp_exp_cat.NAME AS EXPENSE_CATEGORY, comp_exp_cat.VOLUME, 
    CASE WHEN comp_exp_cat.EXP_CAT_RANK = 1 THEN 'First Expense Category' 
         WHEN comp_exp_cat.EXP_CAT_RANK = 2 THEN 'Second Expense Category'
         WHEN comp_exp_cat.EXP_CAT_RANK = 3 THEN 'Third Expense Category'
    END AS EXPENSE_CATEGORY_RANK    
FROM 
    MY_DATABASE.PUBLIC.COMPANY_INDUSTRY comp_ind, MY_DATABASE.PUBLIC.COMPANY_EXPENSE_CATEGORISATION comp_exp_cat
WHERE comp_ind.COMPANY_ID = comp_exp_cat.COMPANY_ID;

SELECT * FROM MY_DATABASE.PUBLIC.COMPANY_EXPENSE_CATEGORISATION_DATA;

SELECT COMPANY_NAME, COUNT(COMPANY_NAME) AS NUM_COMPANY_NAME FROM MY_DATABASE.PUBLIC.COMPANY_EXPENSE_CATEGORISATION_DATA GROUP BY COMPANY_NAME ORDER BY NUM_COMPANY_NAME ASC;



SELECT 
    COUNT(DISTINCT crd.ID) AS Num_Cards 
FROM 
    MY_DATABASE.PUBLIC.CARDS crd
INNER JOIN 
    MY_DATABASE.PUBLIC.COMPANIES comp
ON
    crd.COMPANY_ID = comp.ID
WHERE 
    crd.ACCOUNT_ID IS NOT NULL AND crd.STATUS = 5 AND comp.CONTRACT = 0;





SELECT * FROM MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS WHERE LOWER(NAME) LIKE '%sncf%';


SELECT 
    merch.NAME, crd_exp.*
FROM 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS merch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = merch.ID
WHERE LOWER(merch.NAME) LIKE '%sncf%';


SELECT * FROM MY_DATABASE.PUBLIC.COMPANIES WHERE LOWER(NAME) LIKE '%sncf%';


SELECT * FROM MY_DATABASE.KPI.PARTNERSHIP_VIEW;


SELECT SUM("NUMBER OF EXPENSES") FROM MY_DATABASE.KPI.PARTNERSHIP_VIEW WHERE LOWER(NAME) LIKE '%sncf%';


SELECT * FROM MY_DATABASE.KPI.PARTNERSHIP_VIEW WHERE LOWER(NAME) LIKE '%sncf%' ORDER BY "NUMBER OF EXPENSES" DESC;

-- SNCF Internet




-- SNCF Connect -- SNCF_Connect_06_12_2022
CREATE OR REPLACE VIEW MY_DATABASE.PUBLIC.SNCF_Connect AS 
SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume", COUNT(exp.AMOUNT) AS "Number of Expenses", ROUND(AVG(exp.AMOUNT/-1), 2) AS " Average expenses"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    LOWER(exp.INVOICE_COUNTRY) IN ('fra', 'fr') AND LOWER(NAME) IN ('sncf internet', 'sncf web mobile', 'lw-sncf connect', 'lw-sncf connect 4409716' )
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC; 

SELECT * FROM MY_DATABASE.PUBLIC.SNCF_Connect;


-- SNCF_Connect_VS_Rest_SNCF__06_12_2022
SELECT LEFT(sc.PERIOD,4) AS YEAR, sc.*, rs.VOLUME, rs.NUMBER_OF_EXPENSES, rs.AVERAGE_EXPENSES FROM MY_DATABASE.PUBLIC.SNCF_Connect sc LEFT JOIN MY_DATABASE.PUBLIC.REST_SNCF rs
ON sc.PERIOD = rs.PERIOD;


-- REST_SNCF -- Rest_SNCF_06_12_2022

CREATE OR REPLACE VIEW MY_DATABASE.PUBLIC.REST_SNCF AS
SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume", COUNT(exp.AMOUNT) AS NUMBER_OF_EXPENSES, ROUND(AVG(exp.AMOUNT/-1), 2) AS AVERAGE_EXPENSES
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    LOWER(exp.INVOICE_COUNTRY) IN ('fra', 'fr') AND crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    LOWER(NAME) LIKE '%sncf%' AND LOWER(NAME) NOT IN ('sncf internet', 'sncf web mobile', 'lw-sncf connect', 'lw-sncf connect 4409716' )
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC; 

SELECT * FROM MY_DATABASE.PUBLIC.REST_SNCF;


-- Nombre de licences actives en France sur 2022 avec split mobility / corporate / premium
-- Num_Active_Licenses_2022_FR_06_12_2022
SELECT 
CASE WHEN lc.TYPE = 0 THEN 'Corporate'
     WHEN lc.TYPE = 3 THEn 'Premium'
     WHEN lc.TYPE = 2 THEn 'Mobility'
     END AS LICENSES,     
COUNT(crd.ID) AS Active_Cards FROM MY_DATABASE.PUBLIC.CARDS crd
INNER JOIN MY_DATABASE.PUBLIC.LICENSES lc
ON crd.LICENSE_ID = lc.ID
WHERE BRANDED_AT IS NOT NULL AND DISABLE_AT IS NULL AND crd.ID IN (SELECT DISTINCT crd_exp.CARD_ID FROM MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
INNER JOIN MY_DATABASE.PUBLIC.EXPENSES exp 
ON crd_exp.ID = exp.SOURCE_ID 
WHERE exp.CREATED_AT >= '2022-01-01 00:00:00.000' AND exp.SOURCE_TYPE = 'CardExpense'AND LOWER(exp.INVOICE_COUNTRY) IN ('fra', 'fr') ) 
GROUP BY lc.TYPE;


SELECT DISTINCT TYPE FROM MY_DATABASE.PUBLIC.LICENSES lc;


SELECT DISTINCT crd_exp.CARD_ID FROM MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
INNER JOIN MY_DATABASE.PUBLIC.EXPENSES exp 
ON crd_exp.ID = exp.SOURCE_ID 
WHERE exp.CREATED_AT >= '2022-01-01 00:00:00.000' AND exp.SOURCE_TYPE = 'CardExpense'AND LOWER(exp.INVOICE_COUNTRY) IN ('fra', 'fr');



SELECT * FROM MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS  WHERE LOWER(NAME) LIKE '%total%' OR LOWER(NAME) LIKE 'elan%' OR LOWER(NAME) LIKE '%belib%' OR LOWER(NAME) LIKE '%total wash%' ;


-- TotalEnergies_Monthly_08_12_2022
SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, exp.INVOICE_COUNTRY AS COUNTRY, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume", COUNT(exp.AMOUNT) AS NUMBER_OF_EXPENSES, ROUND(AVG(exp.AMOUNT/-1), 2) AS AVERAGE_EXPENSES
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    LOWER(NAME) LIKE '%total%' OR LOWER(NAME) LIKE 'elan%' OR LOWER(NAME) LIKE '%belib%' OR LOWER(NAME) LIKE '%total wash%'
GROUP BY exp.INVOICE_COUNTRY, DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY exp.INVOICE_COUNTRY, DATE_TRUNC('MONTH', exp.CREATED_AT) ASC;



--TotalEnergies_yearly__Total_08_12_2022
-- TotalEnergies_yearly_08_12_2022
SELECT 
        LEFT(DATE_TRUNC('YEAR', exp.CREATED_AT), 4) AS PERIOD, exp.INVOICE_COUNTRY AS COUNTRY, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume", COUNT(exp.AMOUNT) AS NUMBER_OF_EXPENSES, ROUND(AVG(exp.AMOUNT/-1), 2) AS AVERAGE_EXPENSES
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    LOWER(NAME) LIKE '%total wash%' --OR LOWER(NAME) LIKE 'elan%' OR LOWER(NAME) LIKE '%belib%' OR LOWER(NAME) LIKE '%total wash%'
GROUP BY exp.INVOICE_COUNTRY, DATE_TRUNC('YEAR', exp.CREATED_AT)    
ORDER BY exp.INVOICE_COUNTRY, DATE_TRUNC('YEAR', exp.CREATED_AT) ASC;

-- Stuart


SELECT * FROM MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS  WHERE LOWER(NAME) LIKE '%cultura%';



-- Data_Stuart_13_12_2022
SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume", COUNT(exp.AMOUNT) AS NUMBER_OF_EXPENSES, ROUND(AVG(exp.AMOUNT/-1), 2) AS AVERAGE_EXPENSES
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    LOWER(NAME) LIKE '%stuart%'
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC;



-- Data_Zenchef_13_12_2022
SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume", COUNT(exp.AMOUNT) AS NUMBER_OF_EXPENSES, ROUND(AVG(exp.AMOUNT/-1), 2) AS AVERAGE_EXPENSES
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    LOWER(NAME) LIKE '%zenchef%'
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC;



-- Data_Cultura_13_12_2022
SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume", COUNT(exp.AMOUNT) AS NUMBER_OF_EXPENSES, ROUND(AVG(exp.AMOUNT/-1), 2) AS AVERAGE_EXPENSES
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    LOWER(NAME) LIKE '%cultura%'
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC;


SELECT 
        COUNT(DISTINCT exp.COMPANY_ID) AS Num_Comp_Cultura
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    LOWER(NAME) LIKE '%cultura%';




SELECT * FROM MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS  WHERE LOWER(NAME) LIKE '%dyneff%';


-- Data_dyneff_19_12_2022
SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, exp.INVOICE_COUNTRY AS COUNTRY, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume", COUNT(exp.AMOUNT) AS NUMBER_OF_EXPENSES, ROUND(AVG(exp.AMOUNT/-1), 2) AS AVERAGE_EXPENSES
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    LOWER(NAME) LIKE '%dyneff%' AND UPPER(exp.INVOICE_COUNTRY) IN ('FR', 'FRA')-- ('ES', 'ESP')
GROUP BY exp.INVOICE_COUNTRY, DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC;



-- TOP 100 General Merchants for KillBill
-- Top_100_General_merchants_for_killbill_09_01_2023

SELECT 
        mcrd_mch.NAME, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume", COUNT(exp.AMOUNT) AS NUMBER_OF_EXPENSES, ROUND(AVG(exp.AMOUNT/-1), 2) AS AVERAGE_EXPENSES
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    UPPER(exp.INVOICE_COUNTRY) IN ('FR', 'FRA') AND exp.CREATED_AT BETWEEN TO_DATE('2022-01-01') AND TO_DATE('2022-12-31')
GROUP BY mcrd_mch.NAME    
ORDER BY Volume DESC
LIMIT 100
;



--TOP Merchants for KillBill
-- Top_100_Restaurant_merchants_for_killbill_09_01_2023

SELECT 
        mcrd_mch.NAME, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume", COUNT(exp.AMOUNT) AS NUMBER_OF_EXPENSES, ROUND(AVG(exp.AMOUNT/-1), 2) AS AVERAGE_EXPENSES
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    UPPER(exp.INVOICE_COUNTRY) IN ('FR', 'FRA') AND exp.CREATED_AT BETWEEN TO_DATE('2022-01-01') AND TO_DATE('2022-12-31') AND mcrd_mch.MERCHANT_CATEGORY_CODE IN (763, 5331, 5411, 5422, 5441, 5451, 5462, 5499, 5811, 5812, 5813, 5814, 5921, 8999)
GROUP BY mcrd_mch.NAME    
ORDER BY Volume DESC
LIMIT 100
;




-- Top 5 Fuel Merchants Europe 2022
--Top_5_Fuel_Merchants_in_Europe_for_2022

SELECT 
        mcrd_mch.NAME, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume", COUNT(exp.AMOUNT) AS NUMBER_OF_EXPENSES, ROUND(AVG(exp.AMOUNT/-1), 2) AS AVERAGE_EXPENSES
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    UPPER(exp.INVOICE_COUNTRY) NOT IN ('CAN', 'XXX', 'AUT', 'USA', 'GUF', 'EUE') AND exp.INVOICE_COUNTRY IS NOT NULL AND exp.CREATED_AT BETWEEN TO_DATE('2022-01-01') AND TO_DATE('2022-12-31') AND mcrd_mch.MERCHANT_CATEGORY_CODE IN (5172, 5331, 5411, 5511, 5533, 5541, 5542, 5983, 7349, 7538, 7542)
GROUP BY mcrd_mch.NAME    
ORDER BY NUMBER_OF_EXPENSES DESC
LIMIT 5
;



SELECT DISTINCT INVOICE_COUNTRY FROM MY_DATABASE.PUBLIC.EXPENSES WHERE CREATED_AT BETWEEN TO_DATE('2022-01-01') AND TO_DATE('2022-12-31');

-- 'CAN', 'XXX', 'AUT', 'USA', 'GUF', 'EUE',  NULL


-- Data_for_Merchant_Q8_in_2022

SELECT * FROM MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS  WHERE LOWER(NAME) LIKE '%q8%';



SELECT 
        exp.INVOICE_COUNTRY AS COUNTRY, LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume", COUNT(exp.AMOUNT) AS NUMBER_OF_EXPENSES, ROUND(AVG(exp.AMOUNT/-1), 2) AS AVERAGE_EXPENSES
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    LOWER(NAME) LIKE '%q8%' AND UPPER(exp.INVOICE_COUNTRY) NOT IN ('CAN', 'XXX', 'AUT', 'USA', 'GUF', 'EUE') AND exp.INVOICE_COUNTRY IS NOT NULL AND exp.CREATED_AT BETWEEN TO_DATE('2022-01-01') AND TO_DATE('2022-12-31')
GROUP BY exp.INVOICE_COUNTRY, DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC;




-- Top 5 Fuel Merchants Spain 2022
--Top_5_Fuel_Merchants_in_Spain_for_2022

SELECT 
        mcrd_mch.NAME, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume", COUNT(exp.AMOUNT) AS NUMBER_OF_EXPENSES, ROUND(AVG(exp.AMOUNT/-1), 2) AS AVERAGE_EXPENSES
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    UPPER(exp.INVOICE_COUNTRY) IN ('ESP', 'Spain') AND exp.INVOICE_COUNTRY IS NOT NULL AND exp.CREATED_AT BETWEEN TO_DATE('2022-01-01') AND TO_DATE('2022-12-31') AND mcrd_mch.MERCHANT_CATEGORY_CODE IN (5172, 5331, 5411, 5511, 5533, 5541, 5542, 5983, 7349, 7538, 7542)
GROUP BY mcrd_mch.NAME    
ORDER BY NUMBER_OF_EXPENSES DESC
LIMIT 5
;


-- cepsa
-- Data_for_Merchant_cepsa_in_2022
SELECT 
        exp.INVOICE_COUNTRY AS COUNTRY, LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume", COUNT(exp.AMOUNT) AS NUMBER_OF_EXPENSES, ROUND(AVG(exp.AMOUNT/-1), 2) AS AVERAGE_EXPENSES
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    LOWER(NAME) LIKE '%cepsa%' AND UPPER(exp.INVOICE_COUNTRY)  IN ('ESP', 'Spain') AND exp.INVOICE_COUNTRY IS NOT NULL AND exp.CREATED_AT BETWEEN TO_DATE('2022-01-01') AND TO_DATE('2022-12-31')
GROUP BY exp.INVOICE_COUNTRY, DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC;



--(STATUS=5, COMPANY_ID is not NULL, ACCOUNT_ID is not NULL)

SELECT 
CASE WHEN lc.TYPE = 0 THEN 'Corporate'
     WHEN lc.TYPE = 1 THEn 'X'
     WHEN lc.TYPE = 2 THEn 'Mobility'
     END AS LICENSES,     
COUNT(crd.ID) AS Active_Cards FROM MY_DATABASE.PUBLIC.CARDS crd
INNER JOIN MY_DATABASE.PUBLIC.LICENSES lc
ON crd.LICENSE_ID = lc.ID
WHERE BRANDED_AT IS NOT NULL AND DISABLE_AT IS NULL 
GROUP BY lc.TYPE;


SELECT COUNT(DISTINCT crd.ID) FROM MY_DATABASE.PUBLIC.CARDS crd WHERE STATUS = 5;


SELECT crd.COMPANY_ID, cmp.NAME, COUNT(DISTINCT crd.ID) AS num_Cards FROM MY_DATABASE.PUBLIC.CARDS crd
INNER JOIN MY_DATABASE.PUBLIC.COMPANIES cmp ON cmp.ID = crd.COMPANY_ID  WHERE crd.STATUS = 5 AND cmp.CONTRACT = 0 GROUP BY crd.COMPANY_ID, cmp.NAME ORDER BY num_Cards DESC;


--Newen Group Data

SELECT * FROM MY_DATABASE.PUBLIC.GROUPS WHERE LOWER(NAME) = 'newen';



SELECT 
    grp.ID, grp.NAME, comp.* 
FROM 
    MY_DATABASE.PUBLIC.COMPANIES comp
INNER JOIN
    MY_DATABASE.PUBLIC.GROUPS grp
ON
    comp.GROUP_ID = grp.ID
WHERE LOWER(grp.NAME) = 'newen';  


SELECT
    grp.NAME, comp.NAME, COUNT(exp.ID) AS Number_of_Expenses, ROUND(AVG(exp.AMOUNT/-1), 2) AS Average_Expense_Amount, ROUND(SUM(exp.AMOUNT/-1), 2) AS Total_Expense_Amount
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN
    MY_DATABASE.PUBLIC.COMPANIES comp
ON
    exp.COMPANY_ID = comp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.GROUPS grp
ON
    comp.GROUP_ID = grp.ID    
WHERE exp.CREATED_AT >= '2020-01-01'
AND comp.GROUP_ID IN (SELECT 
    grp.ID
FROM 
    MY_DATABASE.PUBLIC.COMPANIES comp
INNER JOIN
    MY_DATABASE.PUBLIC.GROUPS grp
ON
    comp.GROUP_ID = grp.ID
WHERE LOWER(grp.NAME) = 'newen')
GROUP BY comp.NAME, grp.NAME
ORDER BY Total_Expense_Amount DESC;
    

-- No Data for PARTITA FILMS



SELECT NAME FROM (SELECT 
    grp.ID, grp.NAME AS COMP_GROUP, comp.* 
FROM 
    MY_DATABASE.PUBLIC.COMPANIES comp
INNER JOIN
    MY_DATABASE.PUBLIC.GROUPS grp
ON
    comp.GROUP_ID = grp.ID
WHERE LOWER(grp.NAME) = 'newen')
WHERE NAME NOT IN(SELECT
    comp.NAME
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN
    MY_DATABASE.PUBLIC.COMPANIES comp
ON
    exp.COMPANY_ID = comp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.GROUPS grp
ON
    comp.GROUP_ID = grp.ID    
WHERE comp.GROUP_ID IN (SELECT 
    grp.ID
FROM 
    MY_DATABASE.PUBLIC.COMPANIES comp
INNER JOIN
    MY_DATABASE.PUBLIC.GROUPS grp
ON
    comp.GROUP_ID = grp.ID
WHERE LOWER(grp.NAME) = 'newen')
GROUP BY comp.NAME, grp.NAME);


SELECT * FROM MY_DATABASE.PUBLIC.EXPENSES exp WHERE exp.COMPANY_ID = '5ee74d48-88df-450c-ae2d-c3b4099377de';


-- Employees that spend more than 20k per month


SELECT COMPANY, FIRST_NAME_LAST_NAME AS "First Name Lat Name", MAX(VOLUME) AS Amount_Spent FROM (
SELECT 
     LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, exp.COMPANY_ID, comp.NAME AS COMPANY, exp.USER_PROFILE_ID, CONCAT(usr.FIRSTNAME,' ', usr.LASTNAME) AS First_Name_Last_Name, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume"
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.USER_PROFILES usr_pr
ON
    usr_pr.ID = exp.USER_PROFILE_ID 
INNER JOIN
    MY_DATABASE.PUBLIC.USERS_FOR_EMILY usr
ON
    usr_pr.USER_ID = usr.ID  
INNER JOIN
    MY_DATABASE.PUBLIC.COMPANIES comp
ON
    exp.COMPANY_ID = comp.ID      
WHERE exp.CREATED_AT BETWEEN '2022-01-01' AND '2022-12-31'    
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT), exp.COMPANY_ID, comp.NAME, exp.USER_PROFILE_ID, CONCAT(usr.FIRSTNAME,' ', usr.LASTNAME)
HAVING VOLUME > 20000.00
ORDER BY VOLUME DESC
)
GROUP BY COMPANY, FIRST_NAME_LAST_NAME
ORDER BY Amount_Spent DESC
;




SELECT CONCAT(usr.FIRSTNAME,' ', usr.LASTNAME) AS First_Name_Last_Name FROM MY_DATABASE.PUBLIC.USERS usr;



-- Footprint in Luxembourg

SELECT 
    COUNT(*) 
FROM 
    MY_DATABASE.PUBLIC.COMPANIES comp 
INNER JOIN    
    MY_DATABASE.PUBLIC.ADDRESSES adr 
ON
  adr.ADDRESSABLE_ID = comp.ID  
WHERE comp.CREATED_AT BETWEEN '2022-01-31' AND '2022-12-31' 
      AND UPPER(adr.COUNTRY) IN ('LUX', 'LU')
      AND adr.ADDRESSABLE_TYPE = 'Company';
      
      
      
-- nombre de transactions      
SELECT COUNT(*) AS Number_of_Transactions FROM MY_DATABASE.PUBLIC.EXPENSES WHERE INVOICE_COUNTRY = 'LUX' AND CREATED_AT BETWEEN '2022-01-31' AND '2022-12-31';
SELECT ROUND(SUM(AMOUNT/-1), 2) AS Total_Amount_of_Transactions, ROUND(AVG(AMOUNT/-1), 2) AS Average_Amount_of_Transactions FROM MY_DATABASE.PUBLIC.EXPENSES WHERE UPPER(INVOICE_COUNTRY) IN ('LUX', 'LU') AND CREATED_AT BETWEEN '2022-01-31' AND '2022-12-31';



-- Top 50 Merchants

SELECT 
        mcrd_mch.NAME, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume", COUNT(exp.AMOUNT) AS NUMBER_OF_EXPENSES, ROUND(AVG(exp.AMOUNT/-1), 2) AS AVERAGE_EXPENSES
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    UPPER(exp.INVOICE_COUNTRY) IN ('LUX', 'LUXEMBOURG', 'LU') AND exp.INVOICE_COUNTRY IS NOT NULL AND UPPER(mcrd_mch.COUNTRY) IN ('LUX') AND exp.CREATED_AT BETWEEN TO_DATE('2022-01-01') AND TO_DATE('2022-12-31') -- AND mcrd_mch.MERCHANT_CATEGORY_CODE IN (5172, 5331, 5411, 5511, 5533, 5541, 5542, 5983, 7349, 7538, 7542)
GROUP BY mcrd_mch.NAME    
ORDER BY NUMBER_OF_EXPENSES DESC
LIMIT 50
;





-- Data_Auchan_2022_and_2023
SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume", COUNT(exp.AMOUNT) AS NUMBER_OF_EXPENSES, ROUND(AVG(exp.AMOUNT/-1), 2) AS AVERAGE_EXPENSES
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    LOWER(NAME) LIKE '%auchan%' AND exp.CREATED_AT::string BETWEEN '2022-01-01' AND '2023-06-30'
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC;


-- Fuel_Data_Auchan_2022_and_2023
SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume", COUNT(exp.AMOUNT) AS NUMBER_OF_EXPENSES, ROUND(AVG(exp.AMOUNT/-1), 2) AS AVERAGE_EXPENSES
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    LOWER(NAME) LIKE '%auchan%' AND exp.CREATED_AT::string BETWEEN '2022-01-01' AND '2023-06-30' AND mcrd_mch.MERCHANT_CATEGORY_CODE IN (5172, 5331, 5411, 5511, 5533, 5541, 5542, 5983, 7349, 7538, 7542)
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC;






SELECT * FROM MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS  WHERE LOWER(NAME) LIKE '%auchan%';


-- Data_dyneff_2023
SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, exp.INVOICE_COUNTRY AS COUNTRY, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume", COUNT(exp.AMOUNT) AS NUMBER_OF_EXPENSES, ROUND(AVG(exp.AMOUNT/-1), 2) AS AVERAGE_EXPENSES
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    LOWER(NAME) LIKE '%dyneff%' AND exp.CREATED_AT::string BETWEEN '2023-01-01' AND '2023-06-30'
GROUP BY exp.INVOICE_COUNTRY, DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC;


-- Data_dyneff_Transactions_2023
SELECT 
        LEFT(DATE_TRUNC('month', exp.CREATED_AT), 10) AS PERIOD, exp.CREATED_AT AS Transaction_Date, ROUND(exp.AMOUNT/-1, 2) AS "Amount", exp.INVOICE_COUNTRY AS Address_COUNTRY, mcrd_mch.NAME 
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    LOWER(NAME) LIKE '%dyneff%' AND exp.CREATED_AT::string BETWEEN '2023-01-01' AND '2023-06-30'
--GROUP BY exp.INVOICE_COUNTRY, DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC;

-- 132844.16 - 127896.89




SELECT COMPANY_NAME, ROUND(SUM(AMOUNT), 2) AS EXPENSE_VOLUME, COUNT(DISTINCT expense_id) AS NUM_EXPENSES FROM (
SELECT 
   DISTINCT  mch.NAME AS MERCHANT_NAME, comp.NAME AS COMPANY_NAME, comp.ID, exp.AMOUNT/-1 AS AMOUNT,  exp.ID AS expense_id
FROM 
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mch 
INNER JOIN    
    MY_DATABASE.PUBLIC.COMPANIES comp
ON
    LOWER(mch.NAME) = LOWER(comp.NAME)
INNER JOIN    
    MY_DATABASE.PUBLIC.EXPENSES exp
ON    
    comp.ID = exp.COMPANY_ID
WHERE
    comp.ISDELETED = 'false'
    AND exp.CREATED_AT BETWEEN '2022-01-01' AND '2022-06-30'
)
GROUP BY COMPANY_NAME
;

-- Mooncard Clients and merchants

SELECT LOWER(COMPANY_NAME) AS COMPANY_NAME, ROUND(SUM(AMOUNT), 2) AS EXPENSE_VOLUME, ROUND(AVG(AMOUNT), 2) AS AVERAGE_VOLUME, ROUND(COUNT(expense_id), 2) AS NUM_EXPENSES FROM (
SELECT 
   comp.ID AS COMPANY_ID, mch.NAME AS MERCHANT_NAME, comp.NAME AS COMPANY_NAME, exp.AMOUNT/-1 AS AMOUNT, exp.ID AS expense_id
FROM 
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mch 
INNER JOIN    
    --MY_DATABASE.PUBLIC.COMPANIES comp
    SAS_APPS.SALESFORCE.ACCOUNT comp
ON
    LOWER(mch.NAME) = LOWER(comp.NAME) -- 2,063 rows
   
INNER JOIN
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    mch.ID = crd_exp.MASTERCARD_MERCHANT_ID -- 2,037 rows
    
INNER JOIN    
    MY_DATABASE.PUBLIC.EXPENSES exp
ON    
    crd_exp.ID = exp.SOURCE_ID
      
WHERE
    comp.ISDELETED = 'false'
    --AND comp.SIREN IS NOT NULL
    AND exp.CREATED_AT BETWEEN '2022-01-01' AND '2022-06-30'

)  
GROUP BY LOWER(COMPANY_NAME)
ORDER BY NUM_EXPENSES DESC
;






SELECT * FROM MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS WHERE LOWER(NAME) IN ('air france', 'o''tacos');

SELECT * FROM MY_DATABASE.PUBLIC.COMPANIES WHERE ID IN ('ffe1120a-ad89-4549-9370-02888f404789');

SELECT * FROM MY_DATABASE.PUBLIC.COMPANIES WHERE LOWER(NAME) IN ('euro-ascenseurs', 'anvolia', 'egg events', 'groupe berthier'); -- 'Algolia', '-', 'O''tacos'

SELECT * FROM MY_DATABASE.PUBLIC.EXPENSES WHERE COMPANY_ID IN ('3c2bebf5-e6d5-4bb8-ba7c-7900cf03f8ad') AND CREATED_AT BETWEEN '2022-01-01' AND '2022-06-30';



SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume", COUNT(exp.AMOUNT) AS NUMBER_OF_EXPENSES, ROUND(AVG(exp.AMOUNT/-1), 2) AS AVERAGE_EXPENSES
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    LOWER(mcrd_mch.NAME) LIKE '%oh my cream%' AND exp.CREATED_AT BETWEEN '2022-01-01' AND '2022-06-30' -- oh my cream zv france
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC;


SELECT 
        LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Volume", COUNT(exp.AMOUNT) AS NUMBER_OF_EXPENSES, ROUND(AVG(exp.AMOUNT/-1), 2) AS AVERAGE_EXPENSES
FROM
    MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
WHERE 
    LOWER(mcrd_mch.NAME) LIKE '%oh my cream%' AND exp.CREATED_AT BETWEEN '2022-01-01' AND '2022-06-30' -- oh my cream zv france
GROUP BY DATE_TRUNC('MONTH', exp.CREATED_AT)    
ORDER BY DATE_TRUNC('MONTH', exp.CREATED_AT) ASC;





-- acc.INDUSTRY
 
SELECT DISTINCT acc.WHERAREYOU__C FROM SAS_APPS.SALESFORCE.ACCOUNT acc WHERE acc.WHERAREYOU__C IS NOT NULL;

SELECT DISTINCT REPLACE(acc.INDUSTRY, '&amp;', '&') AS INDUSTRY FROM SAS_APPS.SALESFORCE.ACCOUNT acc WHERE acc.INDUSTRY IS NOT NULL;


SELECT * FROM SAS_APPS.SALESFORCE.ACCOUNT acc WHERE acc.MOONCARDCOMPANYID__C IS NOT NULL;



SELECT * FROM SAS_APPS.SALESFORCE.ACCOUNT acc WHERE acc.TYPE  = 'Private';


SELECT 
    mch.ID, mch.NAME, mch.COUNTRY, mch.MERCHANT_CATEGORY_CODE, COUNT(DISTINCT crd_exp.ID) AS NUM_EXPENSES 
FROM 
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mch
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp 
ON
    mch.ID = crd_exp.MASTERCARD_MERCHANT_ID    
WHERE mch.COUNTRY IN ('GF', 'GUF', 'GP', 'GLP', 'MQ', 'MTQ', 'YT', 'MYT', 'RE', 'REU')
AND mch.MERCHANT_CATEGORY_CODE IN (5172, 5331, 5411, 5511, 5533, 5541, 5542, 5983, 7349, 7538, 7542)
GROUP BY mch.ID, mch.NAME, mch.COUNTRY, mch.MERCHANT_CATEGORY_CODE
-- ORDER BY mch.ID, mch.NAME, mch.COUNTRY, mch.MERCHANT_CATEGORY_CODE
;


/*

0 : Mooncard
1: Mooncard_x (not use anymore)
2 : Fleet
3 : Virtual

*/


-- Expense volumes for 5331 MCC

SELECT 
     CASE WHEN lcs.TYPE = 0 THEN 'Mooncard'
         WHEN lcs.TYPE = 1 THEN 'Mooncard_x (not use anymore)'
         WHEN lcs.TYPE = 2 THEN 'Fleet'
         WHEN lcs.TYPE = 3 THEN 'Virtual'
    ELSE lcs.TYPE::string END AS TYPE,
    LEFT(DATE_TRUNC('MONTH', exp.CREATED_AT), 10) AS PERIOD, ROUND(SUM(exp.AMOUNT/-1), 2) AS "Expense Volume"   
FROM 
        MY_DATABASE.PUBLIC.EXPENSES exp
INNER JOIN 
    MY_DATABASE.PUBLIC.CARD_EXPENSES crd_exp
ON
    exp.SOURCE_ID = crd_exp.ID
INNER JOIN
    MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS mcrd_mch
ON
    crd_exp.MASTERCARD_MERCHANT_ID = mcrd_mch.ID  
INNER JOIN
    MY_DATABASE.PUBLIC.CARDS crd
ON
    crd_exp.CARD_ID = crd.ID
INNER JOIN
    MY_DATABASE.PUBLIC.LICENSES lcs
ON
    crd.LICENSE_ID = lcs.ID    
WHERE 
    mcrd_mch.MERCHANT_CATEGORY_CODE = 5331
    --AND lcs.TYPE = 0
    AND exp.CREATED_AT BETWEEN '2022-01-01' AND '2022-12-31'
GROUP BY PERIOD , lcs.TYPE
ORDER BY PERIOD ASC
;


SELECT DISTINCT MERCHANT_CATEGORY_CODE FROM  MY_DATABASE.PUBLIC.MASTERCARD_MERCHANTS;






SELECT * FROM MY_DATABASE.PUBLIC.COMPANIES WHERE LOWER(NAME) IN ('euro-ascenseurs', 'anvolia', 'egg events', 'groupe berthier');

SELECT * FROM MY_DATABASE.PUBLIC.COMPANIES WHERE ID IN ('1786ab3f-5d00-4a52-863f-b87519eba3fc', '8f2d55e2-9e38-401a-849f-02ec29029dd0', '7b903f5a-b6c3-48aa-884a-06feb1a4f97f');

SELECT acc.MOONCARDCOMPANYID__C, acc.* FROM SAS_APPS.SALESFORCE.ACCOUNT acc WHERE LOWER(NAME) IN ('euro-ascenseurs', 'anvolia', 'egg events', 'groupe berthier');


